{
  "hash": "bae7784ed46bb2532c80fa2e3ca422f2",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Analisa Penjualan Pakaian dengan NumPy\n---\n\n\n\n## Skenario\n\nPerusahaan Anda bergerak di bidang retail pakaian dan ingin menganalisa data penjualan untuk berbagai kategori produk (contoh: kemeja, celana, sepatu) dan ukuran (S, M, L, XL) di berbagai lokasi (toko). Data penjualan disimpan dalam array NumPy bernama ```sales_data``` dengan struktur berikut (data dalam struktur hanya contoh):\n\n```python\nsales_data = np.array([\n[[10, 35, 15, 20],  # Penjualan Lokasi 1\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [5,  35, 8, 12]],\n\n[[12, 35, 18, 15],  # Penjualan Lokasi 2\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [7,  35, 9, 11]]\n])\n\nsales_data.shape = (jumlah_lokasi, jumlah_kategori, jumlah_ukuran)\n```\n\n\n```{note}\nfile tugas bisa didownload [di sini](https://github.com/sakarimov/my-personal-blog/raw/main/mybook/notes/numpy%231.txt)\n\n```\n\n\n::::{note}\nuntuk membuka file ini ikuti petunjuk berikut:\n```python\nimport numpy as np\n\nload_file = np.loadtxt('path/to/the/file/you/download')\nload_original = load_file.reshape(4,7,4)\n```\n::::\n## Tugas\n\n1. **Identifikasi Kategori Penjualan Tertinggi menurut Lokasi (Slicing Lanjutan):**\n\n    * Gunakan teknik slicing tingkat lanjut dalam NumPy untuk menghitung total penjualan untuk setiap kategori di semua ukuran di setiap lokasi.\n    * Petunjuk: Anda dapat menggabungkan slicing dasar (`:`) untuk memilih lokasi tertentu dan masking boolean untuk menjumlahkan di sepanjang sumbu kategori.\n    * Identifikasi kategori dengan penjualan tertinggi untuk setiap lokasi.\n\n2. **Bandingkan Distribusi Ukuran untuk Kategori Spesifik:**\n\n    * Fokus pada kategori tertentu (misalnya, kemeja) di semua lokasi.\n    * Gunakan teknik slicing atau pengindeksan array untuk memilih hanya data penjualan kategori tersebut.\n    * Hitung total penjualan untuk setiap ukuran (jumlahkan di sepanjang sumbu ukuran).\n    * Analisa distribusi ukuran (misalnya, ukuran mana yang paling banyak terjual untuk kategori tersebut secara keseluruhan).\n\n3. **Temukan Lokasi dengan Penjualan Rendah pada Ukuran Tertentu:**\n\n    * Tentukan ukuran tertentu (misalnya, XL) yang mungkin perlu diisi ulang stoknya.\n    * Gunakan masking boolean untuk memilih hanya data penjualan ukuran tersebut dari seluruh array.\n    * Hitung total penjualan produk dengan ukuran tersebut di setiap lokasi (jumlahkan di sepanjang semua sumbu lainnya).\n    * Identifikasi lokasi dengan penjualan di bawah ambang batas tertentu untuk produk dengan ukuran tersebut, yang menunjukkan potensi kebutuhan untuk mengisi ulang stok.\n\n\n",
    "supporting": [
      "numpy task1_files"
    ],
    "filters": [],
    "includes": {}
  }
}