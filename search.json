[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Just Another Attempt to Share",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nkekuatan unik bangsa ini\n\n\n\n\n\n\nopini\n\n\nngelantur\n\n\nindonesia\n\n\n\nsebuah opini kebangsaan\n\n\n\n\n\nJul 2, 2024\n\n\nSulthan A. Karimov\n\n\n\n\n\n\n\n\n\n\n\n\nLatihan Numpy 1\n\n\n\n\n\n\ndata science\n\n\nexercise\n\n\npython\n\n\nnumpy\n\n\nbasic\n\n\n\n\n\n\n\n\n\nJun 10, 2024\n\n\nsulthan a. karimov\n\n\n\n\n\n\n\n\n\n\n\n\nSolusi Tugas numpy 1\n\n\n\n\n\n\ndata science\n\n\nexercise\n\n\npython\n\n\nnumpy\n\n\nbasic\n\n\nsolution\n\n\n\n\n\n\n\n\n\nJun 10, 2024\n\n\nsulthan a. karimov\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "posts/Exercises/numpy task1.html",
    "href": "posts/Exercises/numpy task1.html",
    "title": "Latihan Numpy 1",
    "section": "",
    "text": "Perusahaan Anda bergerak di bidang retail pakaian dan ingin menganalisa data penjualan untuk berbagai kategori produk (contoh: kemeja, celana, sepatu) dan ukuran (S, M, L, XL) di berbagai lokasi (toko). Data penjualan disimpan dalam array NumPy bernama sales_data dengan struktur berikut (data dalam struktur hanya contoh):\n\nimport numpy as np\n\nsales_data = np.array([\n[[10, 35, 15, 20],  # Penjualan Lokasi 1\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [5,  35, 8, 12]],\n\n[[12, 35, 18, 15],  # Penjualan Lokasi 2\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [7,  35, 9, 11]]\n])\n\n# sales_data.shape = (jumlah_lokasi, jumlah_kategori, jumlah_ukuran)\n\nfile tugas bisa didownload [di sini](https://github.com/sakarimov/my-personal-blog/raw/main/mybook/notes/numpy%231.txt)\n\n\n\n\n\n\n\nNote\n\n\n\nuntuk membuka file ini ikuti petunjuk berikut:\nimport numpy as np\n\nload_file = np.loadtxt('path/to/the/file/you/download')\nload_original = load_file.reshape(4,7,4)\n\n\n\n\n\n\nIdentifikasi Kategori Penjualan Tertinggi menurut Lokasi (Slicing Lanjutan):\n\nGunakan teknik slicing tingkat lanjut dalam NumPy untuk menghitung total penjualan untuk setiap kategori di semua ukuran di setiap lokasi.\nPetunjuk: Anda dapat menggabungkan slicing dasar (:) untuk memilih lokasi tertentu dan masking boolean untuk menjumlahkan di sepanjang sumbu kategori.\nIdentifikasi kategori dengan penjualan tertinggi untuk setiap lokasi.\n\nBandingkan Distribusi Ukuran untuk Kategori Spesifik:\n\nFokus pada kategori tertentu (misalnya, kemeja) di semua lokasi.\nGunakan teknik slicing atau pengindeksan array untuk memilih hanya data penjualan kategori tersebut.\nHitung total penjualan untuk setiap ukuran (jumlahkan di sepanjang sumbu ukuran).\nAnalisa distribusi ukuran (misalnya, ukuran mana yang paling banyak terjual untuk kategori tersebut secara keseluruhan).\n\nTemukan Lokasi dengan Penjualan Rendah pada Ukuran Tertentu:\n\nTentukan ukuran tertentu (misalnya, XL) yang mungkin perlu diisi ulang stoknya.\nGunakan masking boolean untuk memilih hanya data penjualan ukuran tersebut dari seluruh array.\nHitung total penjualan produk dengan ukuran tersebut di setiap lokasi (jumlahkan di sepanjang semua sumbu lainnya).\nIdentifikasi lokasi dengan penjualan di bawah ambang batas tertentu untuk produk dengan ukuran tersebut, yang menunjukkan potensi kebutuhan untuk mengisi ulang stok.",
    "crumbs": [
      "About",
      "Posts",
      "Exercises",
      "Latihan Numpy 1"
    ]
  },
  {
    "objectID": "posts/Exercises/numpy task1.html#skenario",
    "href": "posts/Exercises/numpy task1.html#skenario",
    "title": "Latihan Numpy 1",
    "section": "",
    "text": "Perusahaan Anda bergerak di bidang retail pakaian dan ingin menganalisa data penjualan untuk berbagai kategori produk (contoh: kemeja, celana, sepatu) dan ukuran (S, M, L, XL) di berbagai lokasi (toko). Data penjualan disimpan dalam array NumPy bernama sales_data dengan struktur berikut (data dalam struktur hanya contoh):\n\nimport numpy as np\n\nsales_data = np.array([\n[[10, 35, 15, 20],  # Penjualan Lokasi 1\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [25, 35, 30, 18],\n [5,  35, 8, 12]],\n\n[[12, 35, 18, 15],  # Penjualan Lokasi 2\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [22, 35, 28, 20],\n [7,  35, 9, 11]]\n])\n\n# sales_data.shape = (jumlah_lokasi, jumlah_kategori, jumlah_ukuran)\n\nfile tugas bisa didownload [di sini](https://github.com/sakarimov/my-personal-blog/raw/main/mybook/notes/numpy%231.txt)\n\n\n\n\n\n\n\nNote\n\n\n\nuntuk membuka file ini ikuti petunjuk berikut:\nimport numpy as np\n\nload_file = np.loadtxt('path/to/the/file/you/download')\nload_original = load_file.reshape(4,7,4)",
    "crumbs": [
      "About",
      "Posts",
      "Exercises",
      "Latihan Numpy 1"
    ]
  },
  {
    "objectID": "posts/Exercises/numpy task1.html#tugas",
    "href": "posts/Exercises/numpy task1.html#tugas",
    "title": "Latihan Numpy 1",
    "section": "",
    "text": "Identifikasi Kategori Penjualan Tertinggi menurut Lokasi (Slicing Lanjutan):\n\nGunakan teknik slicing tingkat lanjut dalam NumPy untuk menghitung total penjualan untuk setiap kategori di semua ukuran di setiap lokasi.\nPetunjuk: Anda dapat menggabungkan slicing dasar (:) untuk memilih lokasi tertentu dan masking boolean untuk menjumlahkan di sepanjang sumbu kategori.\nIdentifikasi kategori dengan penjualan tertinggi untuk setiap lokasi.\n\nBandingkan Distribusi Ukuran untuk Kategori Spesifik:\n\nFokus pada kategori tertentu (misalnya, kemeja) di semua lokasi.\nGunakan teknik slicing atau pengindeksan array untuk memilih hanya data penjualan kategori tersebut.\nHitung total penjualan untuk setiap ukuran (jumlahkan di sepanjang sumbu ukuran).\nAnalisa distribusi ukuran (misalnya, ukuran mana yang paling banyak terjual untuk kategori tersebut secara keseluruhan).\n\nTemukan Lokasi dengan Penjualan Rendah pada Ukuran Tertentu:\n\nTentukan ukuran tertentu (misalnya, XL) yang mungkin perlu diisi ulang stoknya.\nGunakan masking boolean untuk memilih hanya data penjualan ukuran tersebut dari seluruh array.\nHitung total penjualan produk dengan ukuran tersebut di setiap lokasi (jumlahkan di sepanjang semua sumbu lainnya).\nIdentifikasi lokasi dengan penjualan di bawah ambang batas tertentu untuk produk dengan ukuran tersebut, yang menunjukkan potensi kebutuhan untuk mengisi ulang stok.",
    "crumbs": [
      "About",
      "Posts",
      "Exercises",
      "Latihan Numpy 1"
    ]
  },
  {
    "objectID": "posts/Exercises/numpy task1 solution.html",
    "href": "posts/Exercises/numpy task1 solution.html",
    "title": "Solusi Tugas numpy 1",
    "section": "",
    "text": "import numpy as np\n\nload_file = np.loadtxt('numpy data1.txt')\ndata = load_file.reshape(4,7,4)",
    "crumbs": [
      "About",
      "Posts",
      "Exercises",
      "Solusi Tugas numpy 1"
    ]
  },
  {
    "objectID": "posts/Exercises/numpy task1 solution.html#todo",
    "href": "posts/Exercises/numpy task1 solution.html#todo",
    "title": "Solusi Tugas numpy 1",
    "section": "TODO",
    "text": "TODO\n\nimport numpy as np\n\n# Asumsikan data penjualan Anda berada dalam array NumPy bernama \"sales_data\"\n\n# Langkah 1: Pilih data untuk kategori tertentu (misalnya, kemeja)\n# Ganti \"category_index\" dengan indeks aktual untuk kemeja\nkategori_yang_diminati = 0  # Misalkan kemeja adalah kategori 0\npenjualan_kemeja = data[:, kategori_yang_diminati, :]  # Pilih data untuk kategori ini\n\n# Langkah 2: Hitung total penjualan untuk setiap ukuran (jumlahkan sepanjang sumbu ukuran)\ntotal_per_ukuran = penjualan_kemeja.sum(axis=0)  # Jumlahkan di semua lokasi\n\n# Langkah 3: Analisis distribusi ukuran (tanpa argmax)\n# Temukan nilai maksimum untuk total penjualan tiap ukuran\nmaks_penjualan_ukuran = total_per_ukuran.max()  # Cari total penjualan maksimum\n\n# Buat mask untuk ukuran terpopuler\nmask_terpopuler = total_per_ukuran == maks_penjualan_ukuran  # Bandingkan dengan nilai maksimum\n\n# Identifikasi ukuran terpopuler (menangani kemungkinan seri)\nukuran_terpopuler = np.where(mask_terpopuler)[0]  # Dapatkan indeks elemen True\n\n# Tampilkan hasilnya\nprint(\"Total Penjualan Kemeja per Ukuran:\", total_per_ukuran)\n\n# Tampilkan ukuran terpopuler (menangani seri)\nif len(ukuran_terpopuler) &gt; 1:\n  print(\"Ukuran Kemeja Terpopuler:\", ukuran_terpopuler)\nelse:\n  print(\"Ukuran Kemeja Terpopuler:\", ukuran_terpopuler[0])",
    "crumbs": [
      "About",
      "Posts",
      "Exercises",
      "Solusi Tugas numpy 1"
    ]
  },
  {
    "objectID": "posts/opinions/salut dengan bangsa indonesia.html",
    "href": "posts/opinions/salut dengan bangsa indonesia.html",
    "title": "kekuatan unik bangsa ini",
    "section": "",
    "text": "Salut dengan Bangsa Ini\nsaya salut sekali dengan bangsa Indonesia dalam menyikapi masalah-masalah yang mencuat baru-baru ini. bagaimana tidak?, gempuran itu datang dari berbagai arah, ekonomi, sosial, budaya, bahkan politik. Bangsa Indonesia ini umurnya sudah tidak muda lagi, lebih tua dari negaranya sendiri. jadi maklum kalau masalah-masalah yang muncul belakangan tak menjadi persoalan sebesar kehancuran sebuah bangsa. paling hanya menjadi riak-riak kecil dalam mewarnai kehidupan bernegara. semoga kondisi ini terus jadi kekuatan untuk seluruh Bangsa Indonesia, sehingga masalah selevel negara tidak bisa mengusik kemakmuran hidup kita.\n\n\n\n\n Back to top",
    "crumbs": [
      "About",
      "Posts",
      "Opinions",
      "kekuatan unik bangsa ini"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Just Another Attempt to Share\nIlmu memang memberi kita pengetahuan, tetapi hanya filsafat yang bisa memberi kita kebijaksanaan.\nWill Durant\n\n\n\n Back to top",
    "crumbs": [
      "About"
    ]
  }
]