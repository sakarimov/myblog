<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Sulthan A. Karimov</title>
<link>https://sulthankarimov.my.id/</link>
<atom:link href="https://sulthankarimov.my.id/index.xml" rel="self" type="application/rss+xml"/>
<description>just another attempt to share</description>
<generator>quarto-1.4.555</generator>
<lastBuildDate>Fri, 28 Jun 2024 17:00:00 GMT</lastBuildDate>
<item>
  <title>salut dengan bangsa indonesia</title>
  <dc:creator>sulthan a. karimov</dc:creator>
  <link>https://sulthankarimov.my.id/posts/opinions/salut dengan bangsa indonesia.html</link>
  <description><![CDATA[ 





<section id="salut-dengan-bangsa-ini" class="level1">
<h1>Salut dengan Bangsa Ini</h1>
<p>saya salut sekali dengan bangsa Indonesia dalam menyikapi masalah-masalah yang mencuat baru-baru ini. bagaimana tidak?, gempuran itu datang dari berbagai arah, ekonomi, sosial, budaya, bahkan politik. Bangsa Indonesia ini umurnya sudah tidak muda lagi, lebih tua dari negaranya sendiri. jadi maklum kalau masalah-masalah yang muncul belakangan tak menjadi persoalan sebesar <em>kehancuran sebuah bangsa</em>. paling hanya menjadi riak-riak kecil dalam mewarnai kehidupan bernegara. semoga kondisi ini terus jadi kekuatan untuk seluruh Bangsa Indonesia, sehingga masalah selevel <em>negara</em> tidak bisa mengusik kemakmuran hidup kita.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>opini</category>
  <category>ngelantur</category>
  <category>indonesia</category>
  <guid>https://sulthankarimov.my.id/posts/opinions/salut dengan bangsa indonesia.html</guid>
  <pubDate>Fri, 28 Jun 2024 17:00:00 GMT</pubDate>
</item>
<item>
  <title>my first encounter with webrtc and livekit agents</title>
  <dc:creator>sulthan a. karimov</dc:creator>
  <link>https://sulthankarimov.my.id/posts/livekit/1_first_encounter_with_livekit.html</link>
  <description><![CDATA[ 








<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>backend</category>
  <category>python</category>
  <category>ai</category>
  <category>mlops</category>
  <category>webrtc</category>
  <category>cloud</category>
  <guid>https://sulthankarimov.my.id/posts/livekit/1_first_encounter_with_livekit.html</guid>
  <pubDate>Fri, 21 Jun 2024 17:00:00 GMT</pubDate>
</item>
<item>
  <title>Latihan Numpy 1</title>
  <dc:creator>sulthan a. karimov</dc:creator>
  <link>https://sulthankarimov.my.id/posts/Exercises/numpy task1.html</link>
  <description><![CDATA[ 





<section id="latihan-numpy-1-analisa-penjualan-pakaian-dengan-numpy" class="level1">
<h1>Latihan Numpy 1 : Analisa Penjualan Pakaian dengan NumPy</h1>
<section id="skenario" class="level2">
<h2 class="anchored" data-anchor-id="skenario">Skenario</h2>
<p>Perusahaan Anda bergerak di bidang retail pakaian dan ingin menganalisa data penjualan untuk berbagai kategori produk (contoh: kemeja, celana, sepatu) dan ukuran (S, M, L, XL) di berbagai lokasi (toko). Data penjualan disimpan dalam array NumPy bernama <code>sales_data</code> dengan struktur berikut (data dalam struktur hanya contoh):</p>
<div id="62f26bbc" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3">sales_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([</span>
<span id="cb1-4">[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Penjualan Lokasi 1</span></span>
<span id="cb1-5"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>],</span>
<span id="cb1-6"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>],</span>
<span id="cb1-7"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>],</span>
<span id="cb1-8"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>],</span>
<span id="cb1-9"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>],</span>
<span id="cb1-10"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>]],</span>
<span id="cb1-11"></span>
<span id="cb1-12">[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Penjualan Lokasi 2</span></span>
<span id="cb1-13"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>],</span>
<span id="cb1-14"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>],</span>
<span id="cb1-15"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>],</span>
<span id="cb1-16"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>],</span>
<span id="cb1-17"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>],</span>
<span id="cb1-18"> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>]]</span>
<span id="cb1-19">])</span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sales_data.shape = (jumlah_lokasi, jumlah_kategori, jumlah_ukuran)</span></span></code></pre></div>
</div>
<pre class="{note}"><code>file tugas bisa didownload [di sini](https://github.com/sakarimov/my-personal-blog/raw/main/mybook/notes/numpy%231.txt)
</code></pre>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>untuk membuka file ini ikuti petunjuk berikut:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-2"></span>
<span id="cb3-3">load_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.loadtxt(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'path/to/the/file/you/download'</span>)</span>
<span id="cb3-4">load_original <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_file.reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
</div>
</div>
</section>
<section id="tugas" class="level2">
<h2 class="anchored" data-anchor-id="tugas">Tugas</h2>
<ol type="1">
<li><p><strong>Identifikasi Kategori Penjualan Tertinggi menurut Lokasi (Slicing Lanjutan):</strong></p>
<ul>
<li>Gunakan teknik slicing tingkat lanjut dalam NumPy untuk menghitung total penjualan untuk setiap kategori di semua ukuran di setiap lokasi.</li>
<li>Petunjuk: Anda dapat menggabungkan slicing dasar (<code>:</code>) untuk memilih lokasi tertentu dan masking boolean untuk menjumlahkan di sepanjang sumbu kategori.</li>
<li>Identifikasi kategori dengan penjualan tertinggi untuk setiap lokasi.</li>
</ul></li>
<li><p><strong>Bandingkan Distribusi Ukuran untuk Kategori Spesifik:</strong></p>
<ul>
<li>Fokus pada kategori tertentu (misalnya, kemeja) di semua lokasi.</li>
<li>Gunakan teknik slicing atau pengindeksan array untuk memilih hanya data penjualan kategori tersebut.</li>
<li>Hitung total penjualan untuk setiap ukuran (jumlahkan di sepanjang sumbu ukuran).</li>
<li>Analisa distribusi ukuran (misalnya, ukuran mana yang paling banyak terjual untuk kategori tersebut secara keseluruhan).</li>
</ul></li>
<li><p><strong>Temukan Lokasi dengan Penjualan Rendah pada Ukuran Tertentu:</strong></p>
<ul>
<li>Tentukan ukuran tertentu (misalnya, XL) yang mungkin perlu diisi ulang stoknya.</li>
<li>Gunakan masking boolean untuk memilih hanya data penjualan ukuran tersebut dari seluruh array.</li>
<li>Hitung total penjualan produk dengan ukuran tersebut di setiap lokasi (jumlahkan di sepanjang semua sumbu lainnya).</li>
<li>Identifikasi lokasi dengan penjualan di bawah ambang batas tertentu untuk produk dengan ukuran tersebut, yang menunjukkan potensi kebutuhan untuk mengisi ulang stok.</li>
</ul></li>
</ol>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>data science</category>
  <category>exercise</category>
  <category>python</category>
  <category>numpy</category>
  <category>basic</category>
  <guid>https://sulthankarimov.my.id/posts/Exercises/numpy task1.html</guid>
  <pubDate>Sun, 09 Jun 2024 17:00:00 GMT</pubDate>
</item>
<item>
  <title>Solusi Tugas numpy 1</title>
  <dc:creator>sulthan a. karimov</dc:creator>
  <link>https://sulthankarimov.my.id/posts/Exercises/numpy task1 solution.html</link>
  <description><![CDATA[ 








<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>data science</category>
  <category>exercise</category>
  <category>python</category>
  <category>numpy</category>
  <category>basic</category>
  <category>solution</category>
  <guid>https://sulthankarimov.my.id/posts/Exercises/numpy task1 solution.html</guid>
  <pubDate>Sun, 09 Jun 2024 17:00:00 GMT</pubDate>
</item>
<item>
  <title>Dimensionality Reduction</title>
  <link>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Dimensionality Reduction.html</link>
  <description><![CDATA[ 





<section id="pca" class="level2">

<div id="6f556b4e-fd04-4391-99ab-af3334e207c8" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datasets</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb1-3"></span>
<span id="cb1-4">iris <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datasets.load_iris()</span>
<span id="cb1-5">attributes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris.data</span>
<span id="cb1-6">label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris.target</span>
<span id="cb1-7"></span>
<span id="cb1-8">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(</span>
<span id="cb1-9">    attributes, label, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<section id="without-pca" class="level3">

<div id="7bd66f09-18c7-460f-9a9a-9570b92689e2" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tree</span>
<span id="cb2-2"></span>
<span id="cb2-3">dt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tree.DecisionTreeClassifier()</span>
<span id="cb2-4">first <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dt.fit(X_train, y_train)</span>
<span id="cb2-5">first.score(X_test, y_test)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>0.9666666666666667</code></pre>
</div>
</div>
</section>
<section id="with-pca" class="level3">

<div id="59ac9a77-6f5a-4e07-8c53-e4a6ee98c702" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.decomposition <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PCA</span>
<span id="cb4-2"></span>
<span id="cb4-3">pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PCA(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb4-4"></span>
<span id="cb4-5">pca_attributes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pca.fit_transform(X_train)</span>
<span id="cb4-6"></span>
<span id="cb4-7">pca.explained_variance_ratio_</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>array([0.92848323, 0.04764372, 0.01931005, 0.004563  ])</code></pre>
</div>
</div>
<div id="aa71d5f5-4d28-4f2c-86f0-e350189d23ee" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PCA(n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-2"></span>
<span id="cb6-3">X_train_pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pca.fit_transform(X_train)</span>
<span id="cb6-4">X_test_pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pca.fit_transform(X_test)</span></code></pre></div>
</div>
<div id="389915fb-966b-4dce-b725-41e1e79777b6" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">second <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dt.fit(X_train_pca, y_train)</span>
<span id="cb7-2"></span>
<span id="cb7-3">second.score(X_test_pca, y_test)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>0.9333333333333333</code></pre>
</div>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <guid>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Dimensionality Reduction.html</guid>
  <pubDate>Tue, 02 Jul 2024 09:13:55 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/JanKenPon CNN Feature Extraction.html</link>
  <description><![CDATA[ 




<p><a target="_blank" href="https://colab.research.google.com/github/sakarimov/Basic-ML-Model/blob/main/JanKenPon%20CNN%20Image%20Recognizer.ipynb"> <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"> </a></p>
<section id="student-name-sulthan-a.-karimov" class="level1">
<h1><strong>Student Name</strong> : Sulthan A. Karimov</h1>
</section>
<section id="username-sulthankarimov" class="level1">
<h1><strong>Username</strong> : sulthankarimov</h1>
</section>
<section id="email-sulthankarimovgmail.com" class="level1">
<h1><strong>Email</strong> : sulthankarimov@gmail.com</h1>
<div id="f35a636c-52b5-4ed9-8036-c3c1c8ce8ad2" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>folders[full] matplotlib jupyter_http_over_ws</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (3.8.3)
Requirement already satisfied: jupyter_http_over_ws in /usr/local/lib/python3.11/dist-packages (0.0.8)
Requirement already satisfied: split-folders[full] in /usr/local/lib/python3.11/dist-packages (0.5.1)
Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from split-folders[full]) (4.66.4)
Requirement already satisfied: contourpy&gt;=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.2.0)
Requirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (0.12.1)
Requirement already satisfied: fonttools&gt;=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (4.49.0)
Requirement already satisfied: kiwisolver&gt;=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.4.5)
Requirement already satisfied: numpy&lt;2,&gt;=1.21 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.26.4)
Requirement already satisfied: packaging&gt;=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (23.2)
Requirement already satisfied: pillow&gt;=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (10.2.0)
Requirement already satisfied: pyparsing&gt;=2.3.1 in /usr/lib/python3/dist-packages (from matplotlib) (2.4.7)
Requirement already satisfied: python-dateutil&gt;=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (2.9.0.post0)
Requirement already satisfied: notebook&gt;=5.0 in /usr/local/lib/python3.11/dist-packages (from jupyter_http_over_ws) (7.1.1)
Requirement already satisfied: six&gt;=1.6.0 in /usr/lib/python3/dist-packages (from jupyter_http_over_ws) (1.16.0)
Requirement already satisfied: tornado&gt;=4.5 in /usr/local/lib/python3.11/dist-packages (from jupyter_http_over_ws) (6.4)
Requirement already satisfied: jupyter-server&lt;3,&gt;=2.4.0 in /usr/local/lib/python3.11/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.13.0)
Requirement already satisfied: jupyterlab-server&lt;3,&gt;=2.22.1 in /usr/local/lib/python3.11/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.25.3)
Requirement already satisfied: jupyterlab&lt;4.2,&gt;=4.1.1 in /usr/local/lib/python3.11/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.1.4)
Requirement already satisfied: notebook-shim&lt;0.3,&gt;=0.2 in /usr/local/lib/python3.11/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.4)
Requirement already satisfied: anyio&gt;=3.1.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.3.0)
Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (23.1.0)
Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.1.3)
Requirement already satisfied: jupyter-client&gt;=7.4.4 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (8.6.0)
Requirement already satisfied: jupyter-core!=5.0.*,&gt;=4.12 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.7.1)
Requirement already satisfied: jupyter-events&gt;=0.9.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.9.0)
Requirement already satisfied: jupyter-server-terminals in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.5.2)
Requirement already satisfied: nbconvert&gt;=6.4.4 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (7.16.2)
Requirement already satisfied: nbformat&gt;=5.3.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.9.2)
Requirement already satisfied: overrides in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (7.7.0)
Requirement already satisfied: prometheus-client in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.20.0)
Requirement already satisfied: pyzmq&gt;=24 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (25.1.2)
Requirement already satisfied: send2trash&gt;=1.8.2 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.8.2)
Requirement already satisfied: terminado&gt;=0.8.3 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.18.0)
Requirement already satisfied: traitlets&gt;=5.6.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.14.1)
Requirement already satisfied: websocket-client in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.7.0)
Requirement already satisfied: async-lru&gt;=1.0.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.0.4)
Requirement already satisfied: httpx&gt;=0.25.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.27.0)
Requirement already satisfied: ipykernel in /usr/local/lib/python3.11/dist-packages (from jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (6.29.3)
Requirement already satisfied: jupyter-lsp&gt;=2.0.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.2.4)
Requirement already satisfied: babel&gt;=2.10 in /usr/local/lib/python3.11/dist-packages (from jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.14.0)
Requirement already satisfied: json5&gt;=0.9.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.9.22)
Requirement already satisfied: jsonschema&gt;=4.18.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.21.1)
Requirement already satisfied: requests&gt;=2.31 in /usr/local/lib/python3.11/dist-packages (from jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.31.0)
Requirement already satisfied: idna&gt;=2.8 in /usr/local/lib/python3.11/dist-packages (from anyio&gt;=3.1.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.6)
Requirement already satisfied: sniffio&gt;=1.1 in /usr/local/lib/python3.11/dist-packages (from anyio&gt;=3.1.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.3.1)
Requirement already satisfied: certifi in /usr/local/lib/python3.11/dist-packages (from httpx&gt;=0.25.0-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2024.2.2)
Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.11/dist-packages (from httpx&gt;=0.25.0-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.0.4)
Requirement already satisfied: h11&lt;0.15,&gt;=0.13 in /usr/local/lib/python3.11/dist-packages (from httpcore==1.*-&gt;httpx&gt;=0.25.0-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.14.0)
Requirement already satisfied: MarkupSafe&gt;=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.1.5)
Requirement already satisfied: attrs&gt;=22.2.0 in /usr/local/lib/python3.11/dist-packages (from jsonschema&gt;=4.18.0-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (23.2.0)
Requirement already satisfied: jsonschema-specifications&gt;=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema&gt;=4.18.0-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2023.12.1)
Requirement already satisfied: referencing&gt;=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema&gt;=4.18.0-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.33.0)
Requirement already satisfied: rpds-py&gt;=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema&gt;=4.18.0-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.18.0)
Requirement already satisfied: platformdirs&gt;=2.5 in /usr/local/lib/python3.11/dist-packages (from jupyter-core!=5.0.*,&gt;=4.12-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.2.0)
Requirement already satisfied: python-json-logger&gt;=2.0.4 in /usr/local/lib/python3.11/dist-packages (from jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.0.7)
Requirement already satisfied: pyyaml&gt;=5.3 in /usr/local/lib/python3.11/dist-packages (from jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (6.0.1)
Requirement already satisfied: rfc3339-validator in /usr/local/lib/python3.11/dist-packages (from jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.1.4)
Requirement already satisfied: rfc3986-validator&gt;=0.1.1 in /usr/local/lib/python3.11/dist-packages (from jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.1.1)
Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.12.3)
Requirement already satisfied: bleach!=5.0.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (6.1.0)
Requirement already satisfied: defusedxml in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.7.1)
Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.3.0)
Requirement already satisfied: mistune&lt;4,&gt;=2.0.3 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.0.2)
Requirement already satisfied: nbclient&gt;=0.5.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.9.0)
Requirement already satisfied: pandocfilters&gt;=1.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.5.1)
Requirement already satisfied: pygments&gt;=2.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.17.2)
Requirement already satisfied: tinycss2 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.2.1)
Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.11/dist-packages (from nbformat&gt;=5.3.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.19.1)
Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /usr/local/lib/python3.11/dist-packages (from requests&gt;=2.31-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.3.2)
Requirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests&gt;=2.31-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.2.1)
Requirement already satisfied: ptyprocess in /usr/local/lib/python3.11/dist-packages (from terminado&gt;=0.8.3-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.7.0)
Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.11/dist-packages (from argon2-cffi-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (21.2.0)
Requirement already satisfied: comm&gt;=0.1.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.1)
Requirement already satisfied: debugpy&gt;=1.6.5 in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.8.1)
Requirement already satisfied: ipython&gt;=7.23.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (8.22.2)
Requirement already satisfied: matplotlib-inline&gt;=0.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.1.6)
Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.6.0)
Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.9.8)
Requirement already satisfied: webencodings in /usr/local/lib/python3.11/dist-packages (from bleach!=5.0.0-&gt;nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.5.1)
Requirement already satisfied: decorator in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.1.1)
Requirement already satisfied: jedi&gt;=0.16 in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.19.1)
Requirement already satisfied: prompt-toolkit&lt;3.1.0,&gt;=3.0.41 in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.0.43)
Requirement already satisfied: stack-data in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.6.3)
Requirement already satisfied: pexpect&gt;4.3 in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.9.0)
Requirement already satisfied: fqdn in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.5.1)
Requirement already satisfied: isoduration in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (20.11.0)
Requirement already satisfied: jsonpointer&gt;1.13 in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.4)
Requirement already satisfied: uri-template in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.3.0)
Requirement already satisfied: webcolors&gt;=1.11 in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.13)
Requirement already satisfied: cffi&gt;=1.0.1 in /usr/local/lib/python3.11/dist-packages (from argon2-cffi-bindings-&gt;argon2-cffi-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.16.0)
Requirement already satisfied: soupsieve&gt;1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4-&gt;nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.5)
Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi&gt;=1.0.1-&gt;argon2-cffi-bindings-&gt;argon2-cffi-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.21)
Requirement already satisfied: parso&lt;0.9.0,&gt;=0.8.3 in /usr/local/lib/python3.11/dist-packages (from jedi&gt;=0.16-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.8.3)
Requirement already satisfied: wcwidth in /usr/local/lib/python3.11/dist-packages (from prompt-toolkit&lt;3.1.0,&gt;=3.0.41-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.13)
Requirement already satisfied: arrow&gt;=0.15.0 in /usr/local/lib/python3.11/dist-packages (from isoduration-&gt;jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.3.0)
Requirement already satisfied: executing&gt;=1.2.0 in /usr/local/lib/python3.11/dist-packages (from stack-data-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.0.1)
Requirement already satisfied: asttokens&gt;=2.1.0 in /usr/local/lib/python3.11/dist-packages (from stack-data-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.4.1)
Requirement already satisfied: pure-eval in /usr/local/lib/python3.11/dist-packages (from stack-data-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.2)
Requirement already satisfied: types-python-dateutil&gt;=2.8.10 in /usr/local/lib/python3.11/dist-packages (from arrow&gt;=0.15.0-&gt;isoduration-&gt;jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.8.19.20240106)
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv</code></pre>
</div>
</div>
<div id="86a235dc-8f84-4f6d-b45f-6878d7c3fe98" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb3-2">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TF_CPP_MIN_LOG_LEVEL'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span> </span></code></pre></div>
</div>
<div id="aea13a69-42a3-467b-b280-266d03cb7e2e" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.__version__)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>2.16.1</code></pre>
</div>
</div>
<div id="fd7a6a50-3caf-4be6-8a38-dc932b2709aa" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb6-2">  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> google.colab</span>
<span id="cb6-3">  IN_COLAB <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb6-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb6-5">  IN_COLAB <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb6-6"></span>
<span id="cb6-7">IN_COLAB</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<pre><code>False</code></pre>
</div>
</div>
<div id="01ea05d4-4ade-4aaa-9a91-da5ddf73bcf0" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sometime i run this notebook on my laptop for testing purpose</span></span>
<span id="cb8-2">local_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb8-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/images/'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> IN_COLAB <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb8-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/tmp/'</span></span>
<span id="cb8-5">)</span>
<span id="cb8-6"></span>
<span id="cb8-7">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rockpaperscissors'</span></span>
<span id="cb8-8">local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> local_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dataset_name</span>
<span id="cb8-9">local_zip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.zip'</span></span>
<span id="cb8-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(local_zip)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>datasets/images/rockpaperscissors.zip</code></pre>
</div>
</div>
<div id="0fb56b07-76d7-43f6-b992-564b25aef5ea" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>f $local_zip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> wget <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>no<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>check<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>certificate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-2"> https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>github.com<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dicodingacademy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>assets<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>releases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>release<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>rockpaperscissors.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-3"> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>o $local_zip</span></code></pre></div>
</div>
<div id="d7aeef63-df8f-483a-88cd-267af26ee393" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zipfile, os, shutil, splitfolders, re</span></code></pre></div>
</div>
<div id="e18eed1b-b44e-4a6a-819e-551b0c07fb11" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">zip_ref <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zipfile.ZipFile(local_zip, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb12-2">zip_ref.extractall(local_dir)</span>
<span id="cb12-3">zip_ref.close()</span></code></pre></div>
</div>
<div id="48767388-2b34-4254-9a53-77696233fa65" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">shutil.rmtree(local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/rps-cv-images'</span>)</span>
<span id="cb13-2">os.remove(local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/README_rpc-cv-images.txt'</span>)</span>
<span id="cb13-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.listdir(local_data))</span>
<span id="cb13-4"></span>
<span id="cb13-5">base_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> local_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/rps'</span></span>
<span id="cb13-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.exists(base_dir) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb13-7">  shutil.rmtree(base_dir)</span>
<span id="cb13-8"></span>
<span id="cb13-9">splitfolders.ratio(local_data, base_dir, ratio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.4</span>))</span>
<span id="cb13-10">train_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'train'</span>)</span>
<span id="cb13-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>()</span>
<span id="cb13-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'amount of training sample : '</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(files) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _, _, files <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.walk(re.escape(base_dir) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'/train'</span>)))</span>
<span id="cb13-13">validation_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val'</span>)</span>
<span id="cb13-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'amount of validation sample : '</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(files) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _, _, files <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.walk(re.escape(base_dir) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'/val'</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['paper', 'rock', 'scissors']

amount of training sample :  1312
amount of validation sample :  876</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Copying files: 2188 files [00:00, 5444.71 files/s]</code></pre>
</div>
</div>
<div id="8e74b6a9-c548-4107-a51f-b8c4601049cb" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">os.listdir(train_dir)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<pre><code>['paper', 'rock', 'scissors']</code></pre>
</div>
</div>
<div id="df51b497-0efa-45b0-b183-af1be27fad20" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">os.listdir(validation_dir)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>['paper', 'rock', 'scissors']</code></pre>
</div>
</div>
<div id="43b48c7d-850b-4142-8293-77275af8fe0a" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ImageDataGenerator</span>
<span id="cb20-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications.vgg16 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> preprocess_input</span>
<span id="cb20-3"></span>
<span id="cb20-4">train_datagen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataGenerator(</span>
<span id="cb20-5">    rescale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>,</span>
<span id="cb20-6">    rotation_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb20-7">    horizontal_flip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb20-8">    shear_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb20-9">    fill_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nearest'</span>,</span>
<span id="cb20-10">    preprocessing_function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_input,</span>
<span id="cb20-11">)</span>
<span id="cb20-12"></span>
<span id="cb20-13">test_datagen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataGenerator(</span>
<span id="cb20-14">    rescale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span></code></pre></div>
</div>
<div id="bb7112fd-db5b-4458-9daa-c739790c2e03" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">train_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_datagen.flow_from_directory(</span>
<span id="cb21-2">    train_dir,</span>
<span id="cb21-3">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>),</span>
<span id="cb21-4">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb21-5">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical'</span>,</span>
<span id="cb21-6">    shuffle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb21-7">)</span>
<span id="cb21-8"></span>
<span id="cb21-9">validation_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_datagen.flow_from_directory(</span>
<span id="cb21-10">    validation_dir,</span>
<span id="cb21-11">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>),</span>
<span id="cb21-12">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb21-13">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical'</span>,</span>
<span id="cb21-14">    shuffle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb21-15">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Found 1312 images belonging to 3 classes.
Found 876 images belonging to 3 classes.</code></pre>
</div>
</div>
<div id="4ab4c7c0-67af-455f-b611-737bba5f054c" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LabelEncoder</span>
<span id="cb23-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> VGG16</span>
<span id="cb23-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications.vgg16 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> preprocess_input</span>
<span id="cb23-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> img_to_array</span>
<span id="cb23-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_img</span>
<span id="cb23-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> imutils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> paths</span>
<span id="cb23-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb23-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pickle</span>
<span id="cb23-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb23-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb23-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] loading network..."</span>)</span>
<span id="cb23-12">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> VGG16(weights<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imagenet"</span>, include_top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb23-13">train_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(train_generator)</span>
<span id="cb23-14">train_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_features.reshape((train_features.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>))</span>
<span id="cb23-15">val_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(validation_generator)</span>
<span id="cb23-16">val_features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> val_features.reshape((val_features.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] loading network...
  2/328 ━━━━━━━━━━━━━━━━━━━━ 45s 141ms/step328/328 ━━━━━━━━━━━━━━━━━━━━ 54s 144ms/step
219/219 ━━━━━━━━━━━━━━━━━━━━ 32s 146ms/step</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>/usr/local/lib/python3.11/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:122: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1718172438.489068     309 service.cc:145] XLA service 0x7869d00032a0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
I0000 00:00:1718172438.489112     309 service.cc:153]   StreamExecutor device (0): NVIDIA GeForce GTX 960M, Compute Capability 5.0
I0000 00:00:1718172445.254437     309 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.</code></pre>
</div>
</div>
<div id="313f9617-3bd4-4f3f-8a39-f17781db08b5" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">train_features</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="15">
<pre><code>array([[0.15979376, 0.        , 0.        , ..., 0.        , 0.6380874 ,
        0.        ],
       [0.14911175, 0.        , 0.        , ..., 0.00925446, 0.84793645,
        0.        ],
       [0.1327081 , 0.        , 0.        , ..., 0.1794551 , 0.6249763 ,
        0.        ],
       ...,
       [0.16579124, 0.        , 0.        , ..., 0.        , 0.5942712 ,
        0.        ],
       [0.09918394, 0.        , 0.        , ..., 0.        , 0.8006563 ,
        0.        ],
       [0.2933985 , 0.        , 0.        , ..., 0.        , 0.6294993 ,
        0.        ]], dtype=float32)</code></pre>
</div>
</div>
<div id="9cacb923-ae00-43f8-8914-0e8cc023a3de" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">train_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_features.reshape(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1312</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>)</span>
<span id="cb28-2">train_data.shape</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<pre><code>(1312, 7, 14, 256)</code></pre>
</div>
</div>
<div id="d716a331-0b12-4b90-99f1-0b4422a5eb95" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import the necessary packages</span></span>
<span id="cb30-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LogisticRegression</span>
<span id="cb30-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> classification_report</span>
<span id="cb30-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb30-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pickle</span>
<span id="cb30-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb30-7"></span>
<span id="cb30-8">trainX, trainY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_features, train_generator.classes</span>
<span id="cb30-9">testX, testY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> val_features, validation_generator.classes</span>
<span id="cb30-10"></span>
<span id="cb30-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># train the model</span></span>
<span id="cb30-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] training model..."</span>)</span>
<span id="cb30-13">modelLogReg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogisticRegression(solver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lbfgs"</span>, multi_class<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb30-14">    max_iter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb30-15">modelLogReg.fit(trainX, trainY)</span>
<span id="cb30-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># evaluate the model</span></span>
<span id="cb30-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] evaluating..."</span>)</span>
<span id="cb30-18">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelLogReg.predict(testX)</span>
<span id="cb30-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(classification_report(testY, preds, target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_generator.class_indices.keys()))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] training model...
[INFO] evaluating...
              precision    recall  f1-score   support

       paper       0.98      0.99      0.99       285
        rock       0.98      1.00      0.99       291
    scissors       1.00      0.98      0.99       300

    accuracy                           0.99       876
   macro avg       0.99      0.99      0.99       876
weighted avg       0.99      0.99      0.99       876
</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>/usr/local/lib/python3.11/dist-packages/sklearn/linear_model/_logistic.py:1247: FutureWarning: 'multi_class' was deprecated in version 1.5 and will be removed in 1.7. From then on, it will always use 'multinomial'. Leave it to its default value to avoid this warning.
  warnings.warn(</code></pre>
</div>
</div>
<div id="c33b317e-e628-4375-a53b-36591ff64645" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb33-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb33-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#from google.colab import files</span></span>
<span id="cb33-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> image</span>
<span id="cb33-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> multilabel_confusion_matrix</span>
<span id="cb33-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb33-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpimg</span>
<span id="cb33-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb33-9"></span>
<span id="cb33-10">testdir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/images/rps/test/'</span></span>
<span id="cb33-11">uploaded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(testdir)</span>
<span id="cb33-12">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb33-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#fig.tight_layout(pad=5.0)</span></span>
<span id="cb33-14">plt.subplots_adjust(left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb33-15">                    bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, </span>
<span id="cb33-16">                    right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, </span>
<span id="cb33-17">                    top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, </span>
<span id="cb33-18">                    wspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, </span>
<span id="cb33-19">                    hspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>)</span>
<span id="cb33-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(uploaded)):</span>
<span id="cb33-21">    path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> testdir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> uploaded[i]</span>
<span id="cb33-22">    img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.load_img(path, target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>))</span>
<span id="cb33-23"></span>
<span id="cb33-24">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb33-25">    ax.imshow(img)</span>
<span id="cb33-26">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_to_array(img)</span>
<span id="cb33-27">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.expand_dims(images, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb33-28">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_input(images)</span>
<span id="cb33-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#images = np.vstack([x])</span></span>
<span id="cb33-30">    features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(images, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb33-31">    features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> features.reshape((features.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>))</span>
<span id="cb33-32">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelLogReg.predict(features)</span>
<span id="cb33-33">    ax.title.set_text(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(train_generator.class_indices.keys())[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pred[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])])</span></code></pre></div>
<div class="cell-output cell-output-error">
<pre><code>FileNotFoundError: [Errno 2] No such file or directory: 'datasets/images/rps/test/'</code></pre>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <guid>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/JanKenPon CNN Feature Extraction.html</guid>
  <pubDate>Tue, 02 Jul 2024 09:13:55 GMT</pubDate>
</item>
<item>
  <title>Machine Learning - Supervised Learning</title>
  <link>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/ML - Supervised Learning.html</link>
  <description><![CDATA[ 





<p>One of Machine Learning models is Supervised Learning. as named, this model need human supervision to achieve it’s goal. if the goal is classifying bunch of objects to several categories, this model needs human to tell whether it’s category A, B, or C etc. given that labels the model try to find the best possible pattern of data to be determined as one of those categories.</p>
<p>there are several kind of Supervised Learning Model ML, one of those and the most simple is Classification. to know more about Classification check this out.</p>
<section id="classification" class="level2">
<h2 class="anchored" data-anchor-id="classification">Classification</h2>
<div id="575f8b78-95f5-4b22-8c1a-d72f025ada12" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3">iris <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/iris/Iris.csv'</span>)</span></code></pre></div>
</div>
<div id="cbd2d1a9-693d-44ef-b6f6-4b39305048ea" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">iris</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Id</th>
<th data-quarto-table-cell-role="th">SepalLengthCm</th>
<th data-quarto-table-cell-role="th">SepalWidthCm</th>
<th data-quarto-table-cell-role="th">PetalLengthCm</th>
<th data-quarto-table-cell-role="th">PetalWidthCm</th>
<th data-quarto-table-cell-role="th">Species</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1</td>
<td>5.1</td>
<td>3.5</td>
<td>1.4</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2</td>
<td>4.9</td>
<td>3.0</td>
<td>1.4</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>3</td>
<td>4.7</td>
<td>3.2</td>
<td>1.3</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>4</td>
<td>4.6</td>
<td>3.1</td>
<td>1.5</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>5</td>
<td>5.0</td>
<td>3.6</td>
<td>1.4</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">145</td>
<td>146</td>
<td>6.7</td>
<td>3.0</td>
<td>5.2</td>
<td>2.3</td>
<td>Iris-virginica</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">146</td>
<td>147</td>
<td>6.3</td>
<td>2.5</td>
<td>5.0</td>
<td>1.9</td>
<td>Iris-virginica</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">147</td>
<td>148</td>
<td>6.5</td>
<td>3.0</td>
<td>5.2</td>
<td>2.0</td>
<td>Iris-virginica</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">148</td>
<td>149</td>
<td>6.2</td>
<td>3.4</td>
<td>5.4</td>
<td>2.3</td>
<td>Iris-virginica</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">149</td>
<td>150</td>
<td>5.9</td>
<td>3.0</td>
<td>5.1</td>
<td>1.8</td>
<td>Iris-virginica</td>
</tr>
</tbody>
</table>

<p>150 rows × 6 columns</p>
</div>
</div>
</div>
<div id="cbb1ea9e-3dda-4545-a89a-89be4a1eaab2" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">iris.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 150 entries, 0 to 149
Data columns (total 6 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   Id             150 non-null    int64  
 1   SepalLengthCm  150 non-null    float64
 2   SepalWidthCm   150 non-null    float64
 3   PetalLengthCm  150 non-null    float64
 4   PetalWidthCm   150 non-null    float64
 5   Species        150 non-null    object 
dtypes: float64(4), int64(1), object(1)
memory usage: 7.2+ KB</code></pre>
</div>
</div>
<div id="8edaf4a8-4cbc-4c7e-905e-2586968b9928" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">iris.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Id</th>
<th data-quarto-table-cell-role="th">SepalLengthCm</th>
<th data-quarto-table-cell-role="th">SepalWidthCm</th>
<th data-quarto-table-cell-role="th">PetalLengthCm</th>
<th data-quarto-table-cell-role="th">PetalWidthCm</th>
<th data-quarto-table-cell-role="th">Species</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>1</td>
<td>5.1</td>
<td>3.5</td>
<td>1.4</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>2</td>
<td>4.9</td>
<td>3.0</td>
<td>1.4</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>3</td>
<td>4.7</td>
<td>3.2</td>
<td>1.3</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>4</td>
<td>4.6</td>
<td>3.1</td>
<td>1.5</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>5</td>
<td>5.0</td>
<td>3.6</td>
<td>1.4</td>
<td>0.2</td>
<td>Iris-setosa</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="db7bdfc7-b0b7-4678-8f9b-7d62de9304e0" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sropping unneeded data</span></span>
<span id="cb6-2">iris.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Id'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div id="c2a06279-c6f1-4d55-ba7b-ce149f65a520" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SepalLengthCm'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SepalWidthCm'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PetalLengthCm'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PetalWidthCm'</span>]]</span>
<span id="cb7-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> iris[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>]</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb7-5">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(X, y, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span></code></pre></div>
</div>
<div id="34111b5f-0ab9-4aec-bdac-751995d286ad" class="cell" data-execution_count="27">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tree</span>
<span id="cb8-2"></span>
<span id="cb8-3">clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tree.DecisionTreeClassifier()</span></code></pre></div>
</div>
<div id="6fa2b620-8e4d-4bdc-baf8-674e69063a60" class="cell" data-execution_count="81">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># with cross validation</span></span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cross_val_score</span>
<span id="cb9-3"></span>
<span id="cb9-4">scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cross_val_score(clf, X, y, cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<div id="3551825e-4bdd-44a9-84bc-403292d922f5" class="cell" data-execution_count="37">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">scores</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="37">
<pre><code>array([0.96666667, 0.96666667, 0.9       , 0.96666667, 1.        ])</code></pre>
</div>
</div>
</section>
<section id="conclusion-on-cross_val_score" class="level1">
<h1>conclusion on cross_val_score</h1>
<p><em>cross_cal_score</em> is for validating the quality of data set, it’s consider good if it’s more than 0.85</p>
<div id="6ffed04f-9fa7-43ed-9d3d-6752ee9f28a4" class="cell" data-execution_count="39">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># With defined train test split</span></span>
<span id="cb12-2"></span>
<span id="cb12-3">clf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clf.fit(X_train, y_train)</span></code></pre></div>
</div>
<div id="234530f8-2b79-49b4-a1d7-77666026898a" class="cell" data-execution_count="40">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># model evaluation</span></span>
<span id="cb13-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> accuracy_score</span>
<span id="cb13-3"></span>
<span id="cb13-4">y_pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> clf.predict(X_test)</span>
<span id="cb13-5"></span>
<span id="cb13-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y_pred)</span>
<span id="cb13-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(y_test)</span>
<span id="cb13-8"></span>
<span id="cb13-9">acc_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(accuracy_score(y_pred, y_test), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb13-10"></span>
<span id="cb13-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>, acc_score)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-versicolor'
 'Iris-setosa' 'Iris-virginica' 'Iris-versicolor' 'Iris-setosa'
 'Iris-setosa' 'Iris-versicolor' 'Iris-virginica' 'Iris-setosa'
 'Iris-versicolor' 'Iris-virginica' 'Iris-virginica']
72     Iris-versicolor
112     Iris-virginica
132     Iris-virginica
88     Iris-versicolor
37         Iris-setosa
138     Iris-virginica
87     Iris-versicolor
42         Iris-setosa
8          Iris-setosa
90     Iris-versicolor
141     Iris-virginica
33         Iris-setosa
59     Iris-versicolor
116     Iris-virginica
135     Iris-virginica
Name: Species, dtype: object
accuracy 0.933</code></pre>
</div>
</div>
<div id="4ed24dce-cbb4-43c6-8a5c-560cd835cc33" class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(clf.predict([[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.4</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.3</span>]])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span></code></pre></div>
</div>
<div id="283ac92f-f7a6-4483-a5b1-38c837364080" class="cell" data-execution_count="42">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.tree <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> export_graphviz</span>
<span id="cb16-2">export_graphviz(</span>
<span id="cb16-3">    clf,</span>
<span id="cb16-4">    out_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cache/iristree.dot'</span>,</span>
<span id="cb16-5">    feature_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SepalLengthCm'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SepalWidthCm'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PetalLengthCm'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PetalWidthCm'</span>],</span>
<span id="cb16-6">    class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Iris-setosa'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Iris-versicolor'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Iris-virginica'</span> ],</span>
<span id="cb16-7">    rounded<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb16-8">    filled <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</div>
<div id="217c3f57-d034-4cf3-ab10-cea59dad3c7c" class="cell" data-execution_count="52">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> graphviz</span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to view it as pdf uncomment this</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#graphviz.Source.from_file('iristree.dot').view()</span></span>
<span id="cb17-5">graphviz.Source.from_file(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cache/iristree.dot'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="52">
<div>
<figure class="figure">
<p><img src="https://sulthankarimov.my.id/posts/Data Science/Machine Learning/ML - Supervised Learning_files/figure-html/cell-15-output-1.svg" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="regression" class="level1">
<h1>Regression</h1>
<section id="linear-regression" class="level2">
<h2 class="anchored" data-anchor-id="linear-regression">Linear Regression</h2>
<div id="b175c2d5-489d-402e-a895-fc3365346183" class="cell" data-execution_count="53">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb18-2"></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make dummy data of rooms</span></span>
<span id="cb18-4">bedrooms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])</span>
<span id="cb18-5"> </span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make dummy price data in dolar</span></span>
<span id="cb18-7">house_price <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">27000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">34000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">68000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">81000</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90000</span>])</span></code></pre></div>
</div>
<div id="2a040cb5-da0b-46f7-8ee9-1f1324a081a7" class="cell" data-execution_count="55">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># visualize in scatterplot</span></span>
<span id="cb19-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb19-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb19-4"> </span>
<span id="cb19-5">plt.scatter(bedrooms, house_price)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sulthankarimov.my.id/posts/Data Science/Machine Learning/ML - Supervised Learning_files/figure-html/cell-17-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="1617963d-317a-4b67-8574-e748f87e3325" class="cell" data-execution_count="56">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LinearRegression</span>
<span id="cb20-2"> </span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># train the model with LinearRegression.fit()</span></span>
<span id="cb20-4">bedrooms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bedrooms.reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb20-5">linreg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LinearRegression()</span>
<span id="cb20-6">linreg.fit(bedrooms, house_price)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="56">
<style>#sk-container-id-1 {
  /* Definition of color scheme common for light and dark mode */
  --sklearn-color-text: black;
  --sklearn-color-line: gray;
  /* Definition of color scheme for unfitted estimators */
  --sklearn-color-unfitted-level-0: #fff5e6;
  --sklearn-color-unfitted-level-1: #f6e4d2;
  --sklearn-color-unfitted-level-2: #ffe0b3;
  --sklearn-color-unfitted-level-3: chocolate;
  /* Definition of color scheme for fitted estimators */
  --sklearn-color-fitted-level-0: #f0f8ff;
  --sklearn-color-fitted-level-1: #d4ebff;
  --sklearn-color-fitted-level-2: #b3dbfd;
  --sklearn-color-fitted-level-3: cornflowerblue;

  /* Specific color for light theme */
  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));
  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-icon: #696969;

  @media (prefers-color-scheme: dark) {
    /* Redefinition of color scheme for dark theme */
    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));
    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-icon: #878787;
  }
}

#sk-container-id-1 {
  color: var(--sklearn-color-text);
}

#sk-container-id-1 pre {
  padding: 0;
}

#sk-container-id-1 input.sk-hidden--visually {
  border: 0;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

#sk-container-id-1 div.sk-dashed-wrapped {
  border: 1px dashed var(--sklearn-color-line);
  margin: 0 0.4em 0.5em 0.4em;
  box-sizing: border-box;
  padding-bottom: 0.4em;
  background-color: var(--sklearn-color-background);
}

#sk-container-id-1 div.sk-container {
  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`
     but bootstrap.min.css set `[hidden] { display: none !important; }`
     so we also need the `!important` here to be able to override the
     default hidden behavior on the sphinx rendered scikit-learn.org.
     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */
  display: inline-block !important;
  position: relative;
}

#sk-container-id-1 div.sk-text-repr-fallback {
  display: none;
}

div.sk-parallel-item,
div.sk-serial,
div.sk-item {
  /* draw centered vertical line to link estimators */
  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));
  background-size: 2px 100%;
  background-repeat: no-repeat;
  background-position: center center;
}

/* Parallel-specific style estimator block */

#sk-container-id-1 div.sk-parallel-item::after {
  content: "";
  width: 100%;
  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);
  flex-grow: 1;
}

#sk-container-id-1 div.sk-parallel {
  display: flex;
  align-items: stretch;
  justify-content: center;
  background-color: var(--sklearn-color-background);
  position: relative;
}

#sk-container-id-1 div.sk-parallel-item {
  display: flex;
  flex-direction: column;
}

#sk-container-id-1 div.sk-parallel-item:first-child::after {
  align-self: flex-end;
  width: 50%;
}

#sk-container-id-1 div.sk-parallel-item:last-child::after {
  align-self: flex-start;
  width: 50%;
}

#sk-container-id-1 div.sk-parallel-item:only-child::after {
  width: 0;
}

/* Serial-specific style estimator block */

#sk-container-id-1 div.sk-serial {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: var(--sklearn-color-background);
  padding-right: 1em;
  padding-left: 1em;
}


/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is
clickable and can be expanded/collapsed.
- Pipeline and ColumnTransformer use this feature and define the default style
- Estimators will overwrite some part of the style using the `sk-estimator` class
*/

/* Pipeline and ColumnTransformer style (default) */

#sk-container-id-1 div.sk-toggleable {
  /* Default theme specific background. It is overwritten whether we have a
  specific estimator or a Pipeline/ColumnTransformer */
  background-color: var(--sklearn-color-background);
}

/* Toggleable label */
#sk-container-id-1 label.sk-toggleable__label {
  cursor: pointer;
  display: block;
  width: 100%;
  margin-bottom: 0;
  padding: 0.5em;
  box-sizing: border-box;
  text-align: center;
}

#sk-container-id-1 label.sk-toggleable__label-arrow:before {
  /* Arrow on the left of the label */
  content: "▸";
  float: left;
  margin-right: 0.25em;
  color: var(--sklearn-color-icon);
}

#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {
  color: var(--sklearn-color-text);
}

/* Toggleable content - dropdown */

#sk-container-id-1 div.sk-toggleable__content {
  max-height: 0;
  max-width: 0;
  overflow: hidden;
  text-align: left;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content pre {
  margin: 0.2em;
  border-radius: 0.25em;
  color: var(--sklearn-color-text);
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-toggleable__content.fitted pre {
  /* unfitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {
  /* Expand drop-down */
  max-height: 200px;
  max-width: 100%;
  overflow: auto;
}

#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {
  content: "▾";
}

/* Pipeline/ColumnTransformer-specific style */

#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator-specific style */

/* Colorize estimator box */
#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

#sk-container-id-1 div.sk-label label.sk-toggleable__label,
#sk-container-id-1 div.sk-label label {
  /* The background is the default theme color */
  color: var(--sklearn-color-text-on-default-background);
}

/* On hover, darken the color of the background */
#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

/* Label box, darken color on hover, fitted */
#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator label */

#sk-container-id-1 div.sk-label label {
  font-family: monospace;
  font-weight: bold;
  display: inline-block;
  line-height: 1.2em;
}

#sk-container-id-1 div.sk-label-container {
  text-align: center;
}

/* Estimator-specific */
#sk-container-id-1 div.sk-estimator {
  font-family: monospace;
  border: 1px dotted var(--sklearn-color-border-box);
  border-radius: 0.25em;
  box-sizing: border-box;
  margin-bottom: 0.5em;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-1 div.sk-estimator.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

/* on hover */
#sk-container-id-1 div.sk-estimator:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-1 div.sk-estimator.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Specification for estimator info (e.g. "i" and "?") */

/* Common style for "i" and "?" */

.sk-estimator-doc-link,
a:link.sk-estimator-doc-link,
a:visited.sk-estimator-doc-link {
  float: right;
  font-size: smaller;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1em;
  height: 1em;
  width: 1em;
  text-decoration: none !important;
  margin-left: 1ex;
  /* unfitted */
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
  color: var(--sklearn-color-unfitted-level-1);
}

.sk-estimator-doc-link.fitted,
a:link.sk-estimator-doc-link.fitted,
a:visited.sk-estimator-doc-link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
div.sk-estimator:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover,
div.sk-label-container:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover,
div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

/* Span, style for the box shown on hovering the info icon */
.sk-estimator-doc-link span {
  display: none;
  z-index: 9999;
  position: relative;
  font-weight: normal;
  right: .2ex;
  padding: .5ex;
  margin: .5ex;
  width: min-content;
  min-width: 20ex;
  max-width: 50ex;
  color: var(--sklearn-color-text);
  box-shadow: 2pt 2pt 4pt #999;
  /* unfitted */
  background: var(--sklearn-color-unfitted-level-0);
  border: .5pt solid var(--sklearn-color-unfitted-level-3);
}

.sk-estimator-doc-link.fitted span {
  /* fitted */
  background: var(--sklearn-color-fitted-level-0);
  border: var(--sklearn-color-fitted-level-3);
}

.sk-estimator-doc-link:hover span {
  display: block;
}

/* "?"-specific style due to the `<a>` HTML tag */

#sk-container-id-1 a.estimator_doc_link {
  float: right;
  font-size: 1rem;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1rem;
  height: 1rem;
  width: 1rem;
  text-decoration: none;
  /* unfitted */
  color: var(--sklearn-color-unfitted-level-1);
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
}

#sk-container-id-1 a.estimator_doc_link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
#sk-container-id-1 a.estimator_doc_link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

#sk-container-id-1 a.estimator_doc_link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
}
</a></style><div id="sk-container-id-1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-1" type="checkbox" checked=""><label for="sk-estimator-id-1" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">&nbsp;&nbsp;LinearRegression<a class="sk-estimator-doc-link fitted" rel="noreferrer" target="_blank" href="https://scikit-learn.org/1.4/modules/generated/sklearn.linear_model.LinearRegression.html">?<span>Documentation for LinearRegression</span></a><span class="sk-estimator-doc-link fitted">i<span>Fitted</span></span></label><div class="sk-toggleable__content fitted"><pre>LinearRegression()</pre></div> </div></div></div></div>
</div>
</div>
<div id="53fbab31-7fae-4549-813c-b909449f0109" class="cell" data-execution_count="57">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plotting the corelation between number of rooms and house_prices</span></span>
<span id="cb21-2">plt.scatter(bedrooms, house_price)</span>
<span id="cb21-3">plt.plot(bedrooms, linreg.predict(bedrooms))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sulthankarimov.my.id/posts/Data Science/Machine Learning/ML - Supervised Learning_files/figure-html/cell-19-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="logistic-regression" class="level2">
<h2 class="anchored" data-anchor-id="logistic-regression">Logistic Regression</h2>
<div id="8007161e-606e-4169-b1dc-ee16b52ab94e" class="cell" data-execution_count="58">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb22-2"></span>
<span id="cb22-3">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/socmedAds/Social_Network_Ads.csv'</span>)</span>
<span id="cb22-4">df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="58">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">User ID</th>
<th data-quarto-table-cell-role="th">Gender</th>
<th data-quarto-table-cell-role="th">Age</th>
<th data-quarto-table-cell-role="th">EstimatedSalary</th>
<th data-quarto-table-cell-role="th">Purchased</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>15624510</td>
<td>Male</td>
<td>19</td>
<td>19000</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>15810944</td>
<td>Male</td>
<td>35</td>
<td>20000</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>15668575</td>
<td>Female</td>
<td>26</td>
<td>43000</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>15603246</td>
<td>Female</td>
<td>27</td>
<td>57000</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>15804002</td>
<td>Male</td>
<td>19</td>
<td>76000</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">395</td>
<td>15691863</td>
<td>Female</td>
<td>46</td>
<td>41000</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">396</td>
<td>15706071</td>
<td>Male</td>
<td>51</td>
<td>23000</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">397</td>
<td>15654296</td>
<td>Female</td>
<td>50</td>
<td>20000</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">398</td>
<td>15755018</td>
<td>Male</td>
<td>36</td>
<td>33000</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">399</td>
<td>15594041</td>
<td>Female</td>
<td>49</td>
<td>36000</td>
<td>1</td>
</tr>
</tbody>
</table>

<p>400 rows × 5 columns</p>
</div>
</div>
</div>
<div id="9ca5ea55-4b5b-4208-b137-b05942efdd68" class="cell" data-execution_count="60">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">df.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 400 entries, 0 to 399
Data columns (total 5 columns):
 #   Column           Non-Null Count  Dtype 
---  ------           --------------  ----- 
 0   User ID          400 non-null    int64 
 1   Gender           400 non-null    object
 2   Age              400 non-null    int64 
 3   EstimatedSalary  400 non-null    int64 
 4   Purchased        400 non-null    int64 
dtypes: int64(4), object(1)
memory usage: 15.8+ KB</code></pre>
</div>
</div>
<div id="0b3461dd-1c23-4dc7-93ea-d8848fa4dd7d" class="cell" data-execution_count="62">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'User ID'</span>])</span>
<span id="cb25-2"></span>
<span id="cb25-3">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.get_dummies(data)</span>
<span id="cb25-4">data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="62">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Age</th>
<th data-quarto-table-cell-role="th">EstimatedSalary</th>
<th data-quarto-table-cell-role="th">Purchased</th>
<th data-quarto-table-cell-role="th">Gender_Female</th>
<th data-quarto-table-cell-role="th">Gender_Male</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>19</td>
<td>19000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>35</td>
<td>20000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>26</td>
<td>43000</td>
<td>0</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>27</td>
<td>57000</td>
<td>0</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>19</td>
<td>76000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">395</td>
<td>46</td>
<td>41000</td>
<td>1</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">396</td>
<td>51</td>
<td>23000</td>
<td>1</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">397</td>
<td>50</td>
<td>20000</td>
<td>1</td>
<td>True</td>
<td>False</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">398</td>
<td>36</td>
<td>33000</td>
<td>0</td>
<td>False</td>
<td>True</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">399</td>
<td>49</td>
<td>36000</td>
<td>1</td>
<td>True</td>
<td>False</td>
</tr>
</tbody>
</table>

<p>400 rows × 5 columns</p>
</div>
</div>
</div>
<div id="8b258528-c35b-4ff8-bfdc-47861ce422fa" class="cell" data-execution_count="63">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Age'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'EstimatedSalary'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gender_Female'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gender_Male'</span>]]</span>
<span id="cb26-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Purchased'</span>]</span></code></pre></div>
</div>
<div id="e9239f5b-4c18-4963-8677-a4473df87e33" class="cell" data-execution_count="66">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data normalization</span></span>
<span id="cb27-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> StandardScaler</span>
<span id="cb27-3">scaler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StandardScaler()</span>
<span id="cb27-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculating the mean and standard deviation of every attribute column</span></span>
<span id="cb27-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to be used on every transform function</span></span>
<span id="cb27-6">scaler.fit(X)</span>
<span id="cb27-7">scaled_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scaler.transform(X)</span>
<span id="cb27-8">scaled_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(scaled_data, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>X.columns)</span>
<span id="cb27-9">scaled_data</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="66">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Age</th>
<th data-quarto-table-cell-role="th">EstimatedSalary</th>
<th data-quarto-table-cell-role="th">Gender_Female</th>
<th data-quarto-table-cell-role="th">Gender_Male</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>-1.781797</td>
<td>-1.490046</td>
<td>-1.020204</td>
<td>1.020204</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>-0.253587</td>
<td>-1.460681</td>
<td>-1.020204</td>
<td>1.020204</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>-1.113206</td>
<td>-0.785290</td>
<td>0.980196</td>
<td>-0.980196</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>-1.017692</td>
<td>-0.374182</td>
<td>0.980196</td>
<td>-0.980196</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>-1.781797</td>
<td>0.183751</td>
<td>-1.020204</td>
<td>1.020204</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">395</td>
<td>0.797057</td>
<td>-0.844019</td>
<td>0.980196</td>
<td>-0.980196</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">396</td>
<td>1.274623</td>
<td>-1.372587</td>
<td>-1.020204</td>
<td>1.020204</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">397</td>
<td>1.179110</td>
<td>-1.460681</td>
<td>0.980196</td>
<td>-0.980196</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">398</td>
<td>-0.158074</td>
<td>-1.078938</td>
<td>-1.020204</td>
<td>1.020204</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">399</td>
<td>1.083596</td>
<td>-0.990844</td>
<td>0.980196</td>
<td>-0.980196</td>
</tr>
</tbody>
</table>

<p>400 rows × 4 columns</p>
</div>
</div>
</div>
<div id="828fec53-798c-48a3-aea7-f7891b49f5cd" class="cell" data-execution_count="75">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># validation with cross validation</span></span>
<span id="cb28-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cross_val_score</span>
<span id="cb28-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> linear_model</span>
<span id="cb28-4"></span>
<span id="cb28-5">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> linear_model.LogisticRegression()</span>
<span id="cb28-6">scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cross_val_score(model, scaled_data, y, cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
</div>
<div id="2c0c5df4-c4b7-42e3-9437-cbc4bee7cfbe" class="cell" data-execution_count="76">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">scores</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="76">
<pre><code>array([0.7   , 0.95  , 0.9375, 0.8125, 0.7   ])</code></pre>
</div>
</div>
<div id="7ff464d6-b201-4db9-add7-f7d634705648" class="cell" data-execution_count="77">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.model_selection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> train_test_split</span>
<span id="cb31-2"> </span>
<span id="cb31-3">X_train, X_test, y_train, y_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_test_split(scaled_data, y, test_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<div id="24437d70-2d1f-419a-8c1f-3a3601501dc7" class="cell" data-execution_count="78">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">model.fit(X_train, y_train)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="78">
<style>#sk-container-id-2 {
  /* Definition of color scheme common for light and dark mode */
  --sklearn-color-text: black;
  --sklearn-color-line: gray;
  /* Definition of color scheme for unfitted estimators */
  --sklearn-color-unfitted-level-0: #fff5e6;
  --sklearn-color-unfitted-level-1: #f6e4d2;
  --sklearn-color-unfitted-level-2: #ffe0b3;
  --sklearn-color-unfitted-level-3: chocolate;
  /* Definition of color scheme for fitted estimators */
  --sklearn-color-fitted-level-0: #f0f8ff;
  --sklearn-color-fitted-level-1: #d4ebff;
  --sklearn-color-fitted-level-2: #b3dbfd;
  --sklearn-color-fitted-level-3: cornflowerblue;

  /* Specific color for light theme */
  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));
  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
  --sklearn-color-icon: #696969;

  @media (prefers-color-scheme: dark) {
    /* Redefinition of color scheme for dark theme */
    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));
    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
    --sklearn-color-icon: #878787;
  }
}

#sk-container-id-2 {
  color: var(--sklearn-color-text);
}

#sk-container-id-2 pre {
  padding: 0;
}

#sk-container-id-2 input.sk-hidden--visually {
  border: 0;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

#sk-container-id-2 div.sk-dashed-wrapped {
  border: 1px dashed var(--sklearn-color-line);
  margin: 0 0.4em 0.5em 0.4em;
  box-sizing: border-box;
  padding-bottom: 0.4em;
  background-color: var(--sklearn-color-background);
}

#sk-container-id-2 div.sk-container {
  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`
     but bootstrap.min.css set `[hidden] { display: none !important; }`
     so we also need the `!important` here to be able to override the
     default hidden behavior on the sphinx rendered scikit-learn.org.
     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */
  display: inline-block !important;
  position: relative;
}

#sk-container-id-2 div.sk-text-repr-fallback {
  display: none;
}

div.sk-parallel-item,
div.sk-serial,
div.sk-item {
  /* draw centered vertical line to link estimators */
  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));
  background-size: 2px 100%;
  background-repeat: no-repeat;
  background-position: center center;
}

/* Parallel-specific style estimator block */

#sk-container-id-2 div.sk-parallel-item::after {
  content: "";
  width: 100%;
  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);
  flex-grow: 1;
}

#sk-container-id-2 div.sk-parallel {
  display: flex;
  align-items: stretch;
  justify-content: center;
  background-color: var(--sklearn-color-background);
  position: relative;
}

#sk-container-id-2 div.sk-parallel-item {
  display: flex;
  flex-direction: column;
}

#sk-container-id-2 div.sk-parallel-item:first-child::after {
  align-self: flex-end;
  width: 50%;
}

#sk-container-id-2 div.sk-parallel-item:last-child::after {
  align-self: flex-start;
  width: 50%;
}

#sk-container-id-2 div.sk-parallel-item:only-child::after {
  width: 0;
}

/* Serial-specific style estimator block */

#sk-container-id-2 div.sk-serial {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: var(--sklearn-color-background);
  padding-right: 1em;
  padding-left: 1em;
}


/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is
clickable and can be expanded/collapsed.
- Pipeline and ColumnTransformer use this feature and define the default style
- Estimators will overwrite some part of the style using the `sk-estimator` class
*/

/* Pipeline and ColumnTransformer style (default) */

#sk-container-id-2 div.sk-toggleable {
  /* Default theme specific background. It is overwritten whether we have a
  specific estimator or a Pipeline/ColumnTransformer */
  background-color: var(--sklearn-color-background);
}

/* Toggleable label */
#sk-container-id-2 label.sk-toggleable__label {
  cursor: pointer;
  display: block;
  width: 100%;
  margin-bottom: 0;
  padding: 0.5em;
  box-sizing: border-box;
  text-align: center;
}

#sk-container-id-2 label.sk-toggleable__label-arrow:before {
  /* Arrow on the left of the label */
  content: "▸";
  float: left;
  margin-right: 0.25em;
  color: var(--sklearn-color-icon);
}

#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {
  color: var(--sklearn-color-text);
}

/* Toggleable content - dropdown */

#sk-container-id-2 div.sk-toggleable__content {
  max-height: 0;
  max-width: 0;
  overflow: hidden;
  text-align: left;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-2 div.sk-toggleable__content.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-2 div.sk-toggleable__content pre {
  margin: 0.2em;
  border-radius: 0.25em;
  color: var(--sklearn-color-text);
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-2 div.sk-toggleable__content.fitted pre {
  /* unfitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {
  /* Expand drop-down */
  max-height: 200px;
  max-width: 100%;
  overflow: auto;
}

#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {
  content: "▾";
}

/* Pipeline/ColumnTransformer-specific style */

#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator-specific style */

/* Colorize estimator box */
#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

#sk-container-id-2 div.sk-label label.sk-toggleable__label,
#sk-container-id-2 div.sk-label label {
  /* The background is the default theme color */
  color: var(--sklearn-color-text-on-default-background);
}

/* On hover, darken the color of the background */
#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-unfitted-level-2);
}

/* Label box, darken color on hover, fitted */
#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {
  color: var(--sklearn-color-text);
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Estimator label */

#sk-container-id-2 div.sk-label label {
  font-family: monospace;
  font-weight: bold;
  display: inline-block;
  line-height: 1.2em;
}

#sk-container-id-2 div.sk-label-container {
  text-align: center;
}

/* Estimator-specific */
#sk-container-id-2 div.sk-estimator {
  font-family: monospace;
  border: 1px dotted var(--sklearn-color-border-box);
  border-radius: 0.25em;
  box-sizing: border-box;
  margin-bottom: 0.5em;
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-0);
}

#sk-container-id-2 div.sk-estimator.fitted {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-0);
}

/* on hover */
#sk-container-id-2 div.sk-estimator:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-2);
}

#sk-container-id-2 div.sk-estimator.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-2);
}

/* Specification for estimator info (e.g. "i" and "?") */

/* Common style for "i" and "?" */

.sk-estimator-doc-link,
a:link.sk-estimator-doc-link,
a:visited.sk-estimator-doc-link {
  float: right;
  font-size: smaller;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1em;
  height: 1em;
  width: 1em;
  text-decoration: none !important;
  margin-left: 1ex;
  /* unfitted */
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
  color: var(--sklearn-color-unfitted-level-1);
}

.sk-estimator-doc-link.fitted,
a:link.sk-estimator-doc-link.fitted,
a:visited.sk-estimator-doc-link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
div.sk-estimator:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover,
div.sk-label-container:hover .sk-estimator-doc-link:hover,
.sk-estimator-doc-link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover,
div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,
.sk-estimator-doc-link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

/* Span, style for the box shown on hovering the info icon */
.sk-estimator-doc-link span {
  display: none;
  z-index: 9999;
  position: relative;
  font-weight: normal;
  right: .2ex;
  padding: .5ex;
  margin: .5ex;
  width: min-content;
  min-width: 20ex;
  max-width: 50ex;
  color: var(--sklearn-color-text);
  box-shadow: 2pt 2pt 4pt #999;
  /* unfitted */
  background: var(--sklearn-color-unfitted-level-0);
  border: .5pt solid var(--sklearn-color-unfitted-level-3);
}

.sk-estimator-doc-link.fitted span {
  /* fitted */
  background: var(--sklearn-color-fitted-level-0);
  border: var(--sklearn-color-fitted-level-3);
}

.sk-estimator-doc-link:hover span {
  display: block;
}

/* "?"-specific style due to the `<a>` HTML tag */

#sk-container-id-2 a.estimator_doc_link {
  float: right;
  font-size: 1rem;
  line-height: 1em;
  font-family: monospace;
  background-color: var(--sklearn-color-background);
  border-radius: 1rem;
  height: 1rem;
  width: 1rem;
  text-decoration: none;
  /* unfitted */
  color: var(--sklearn-color-unfitted-level-1);
  border: var(--sklearn-color-unfitted-level-1) 1pt solid;
}

#sk-container-id-2 a.estimator_doc_link.fitted {
  /* fitted */
  border: var(--sklearn-color-fitted-level-1) 1pt solid;
  color: var(--sklearn-color-fitted-level-1);
}

/* On hover */
#sk-container-id-2 a.estimator_doc_link:hover {
  /* unfitted */
  background-color: var(--sklearn-color-unfitted-level-3);
  color: var(--sklearn-color-background);
  text-decoration: none;
}

#sk-container-id-2 a.estimator_doc_link.fitted:hover {
  /* fitted */
  background-color: var(--sklearn-color-fitted-level-3);
}
</a></style><div id="sk-container-id-2" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br>On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden=""><div class="sk-item"><div class="sk-estimator fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-2" type="checkbox" checked=""><label for="sk-estimator-id-2" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">&nbsp;&nbsp;LogisticRegression<a class="sk-estimator-doc-link fitted" rel="noreferrer" target="_blank" href="https://scikit-learn.org/1.4/modules/generated/sklearn.linear_model.LogisticRegression.html">?<span>Documentation for LogisticRegression</span></a><span class="sk-estimator-doc-link fitted">i<span>Fitted</span></span></label><div class="sk-toggleable__content fitted"><pre>LogisticRegression()</pre></div> </div></div></div></div>
</div>
</div>
<div id="af2af5e1-bf0b-43f7-a8d6-9cec1bb959e9" class="cell" data-execution_count="79">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># examine model accuracy</span></span>
<span id="cb33-2">model.score(X_test, y_test)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="79">
<pre><code>0.825</code></pre>
</div>
</div>


</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <guid>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/ML - Supervised Learning.html</guid>
  <pubDate>Tue, 02 Jul 2024 09:13:55 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Submission-colab.html</link>
  <description><![CDATA[ 




<p><a target="_blank" href="https://colab.research.google.com/github/sakarimov/Basic-ML-Model/blob/main/JanKenPon%20CNN%20Image%20Recognizer.ipynb"> <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"> </a></p>
<section id="student-name-sulthan-a.-karimov" class="level1">
<h1><strong>Student Name</strong> : Sulthan A. Karimov</h1>
</section>
<section id="username-sulthankarimov" class="level1">
<h1><strong>Username</strong> : sulthankarimov</h1>
</section>
<section id="email-sulthankarimovgmail.com" class="level1">
<h1><strong>Email</strong> : sulthankarimov@gmail.com</h1>
<div id="f35a636c-52b5-4ed9-8036-c3c1c8ce8ad2" class="cell" data-outputid="31604d33-1523-4e75-d15a-fa9d91b523ca" data-execution_count="6">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>folders[full] matplotlib jupyter_http_over_ws imutils</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Requirement already satisfied: split-folders[full] in /usr/local/lib/python3.10/dist-packages (0.5.1)
Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.1)
Requirement already satisfied: jupyter_http_over_ws in /usr/local/lib/python3.10/dist-packages (0.0.8)
Requirement already satisfied: imutils in /usr/local/lib/python3.10/dist-packages (0.5.4)
Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from split-folders[full]) (4.66.4)
Requirement already satisfied: contourpy&gt;=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.2.1)
Requirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.12.1)
Requirement already satisfied: fonttools&gt;=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.53.0)
Requirement already satisfied: kiwisolver&gt;=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.5)
Requirement already satisfied: numpy&gt;=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.25.2)
Requirement already satisfied: packaging&gt;=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (24.1)
Requirement already satisfied: pillow&gt;=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (9.4.0)
Requirement already satisfied: pyparsing&gt;=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.1.2)
Requirement already satisfied: python-dateutil&gt;=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (2.8.2)
Requirement already satisfied: notebook&gt;=5.0 in /usr/local/lib/python3.10/dist-packages (from jupyter_http_over_ws) (6.5.5)
Requirement already satisfied: six&gt;=1.6.0 in /usr/local/lib/python3.10/dist-packages (from jupyter_http_over_ws) (1.16.0)
Requirement already satisfied: tornado&gt;=4.5 in /usr/local/lib/python3.10/dist-packages (from jupyter_http_over_ws) (6.3.3)
Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.1.4)
Requirement already satisfied: pyzmq&lt;25,&gt;=17 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (24.0.1)
Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (23.1.0)
Requirement already satisfied: traitlets&gt;=4.2.1 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.7.1)
Requirement already satisfied: jupyter-core&gt;=4.6.1 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.7.2)
Requirement already satisfied: jupyter-client&lt;8,&gt;=5.3.4 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (6.1.12)
Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.0)
Requirement already satisfied: nbformat in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.10.4)
Requirement already satisfied: nbconvert&gt;=5 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (6.5.4)
Requirement already satisfied: nest-asyncio&gt;=1.5 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.6.0)
Requirement already satisfied: ipykernel in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.5.6)
Requirement already satisfied: Send2Trash&gt;=1.8.0 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.8.3)
Requirement already satisfied: terminado&gt;=0.8.3 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.18.1)
Requirement already satisfied: prometheus-client in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.20.0)
Requirement already satisfied: nbclassic&gt;=0.4.7 in /usr/local/lib/python3.10/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.1.0)
Requirement already satisfied: platformdirs&gt;=2.5 in /usr/local/lib/python3.10/dist-packages (from jupyter-core&gt;=4.6.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.2.2)
Requirement already satisfied: notebook-shim&gt;=0.2.3 in /usr/local/lib/python3.10/dist-packages (from nbclassic&gt;=0.4.7-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.4)
Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.9.4)
Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.12.3)
Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (6.1.0)
Requirement already satisfied: defusedxml in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.7.1)
Requirement already satisfied: entrypoints&gt;=0.2.2 in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.4)
Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.3.0)
Requirement already satisfied: MarkupSafe&gt;=2.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.1.5)
Requirement already satisfied: mistune&lt;2,&gt;=0.8.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.8.4)
Requirement already satisfied: nbclient&gt;=0.5.0 in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.10.0)
Requirement already satisfied: pandocfilters&gt;=1.4.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.5.1)
Requirement already satisfied: pygments&gt;=2.4.1 in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.16.1)
Requirement already satisfied: tinycss2 in /usr/local/lib/python3.10/dist-packages (from nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.3.0)
Requirement already satisfied: fastjsonschema&gt;=2.15 in /usr/local/lib/python3.10/dist-packages (from nbformat-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.19.1)
Requirement already satisfied: jsonschema&gt;=2.6 in /usr/local/lib/python3.10/dist-packages (from nbformat-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.19.2)
Requirement already satisfied: ptyprocess in /usr/local/lib/python3.10/dist-packages (from terminado&gt;=0.8.3-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.7.0)
Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.10/dist-packages (from argon2-cffi-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (21.2.0)
Requirement already satisfied: ipython&gt;=5.0.0 in /usr/local/lib/python3.10/dist-packages (from ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (7.34.0)
Requirement already satisfied: setuptools&gt;=18.5 in /usr/local/lib/python3.10/dist-packages (from ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (67.7.2)
Requirement already satisfied: jedi&gt;=0.16 in /usr/local/lib/python3.10/dist-packages (from ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.19.1)
Requirement already satisfied: decorator in /usr/local/lib/python3.10/dist-packages (from ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.4.2)
Requirement already satisfied: pickleshare in /usr/local/lib/python3.10/dist-packages (from ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.7.5)
Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,&lt;3.1.0,&gt;=2.0.0 in /usr/local/lib/python3.10/dist-packages (from ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.0.47)
Requirement already satisfied: backcall in /usr/local/lib/python3.10/dist-packages (from ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.0)
Requirement already satisfied: matplotlib-inline in /usr/local/lib/python3.10/dist-packages (from ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.1.7)
Requirement already satisfied: pexpect&gt;4.3 in /usr/local/lib/python3.10/dist-packages (from ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.9.0)
Requirement already satisfied: attrs&gt;=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema&gt;=2.6-&gt;nbformat-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (23.2.0)
Requirement already satisfied: jsonschema-specifications&gt;=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema&gt;=2.6-&gt;nbformat-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2023.12.1)
Requirement already satisfied: referencing&gt;=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema&gt;=2.6-&gt;nbformat-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.35.1)
Requirement already satisfied: rpds-py&gt;=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema&gt;=2.6-&gt;nbformat-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.18.1)
Requirement already satisfied: jupyter-server&lt;3,&gt;=1.8 in /usr/local/lib/python3.10/dist-packages (from notebook-shim&gt;=0.2.3-&gt;nbclassic&gt;=0.4.7-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.24.0)
Requirement already satisfied: cffi&gt;=1.0.1 in /usr/local/lib/python3.10/dist-packages (from argon2-cffi-bindings-&gt;argon2-cffi-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.16.0)
Requirement already satisfied: soupsieve&gt;1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4-&gt;nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.5)
Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach-&gt;nbconvert&gt;=5-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.5.1)
Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi&gt;=1.0.1-&gt;argon2-cffi-bindings-&gt;argon2-cffi-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.22)
Requirement already satisfied: parso&lt;0.9.0,&gt;=0.8.3 in /usr/local/lib/python3.10/dist-packages (from jedi&gt;=0.16-&gt;ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.8.4)
Requirement already satisfied: anyio&lt;4,&gt;=3.1.0 in /usr/local/lib/python3.10/dist-packages (from jupyter-server&lt;3,&gt;=1.8-&gt;notebook-shim&gt;=0.2.3-&gt;nbclassic&gt;=0.4.7-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.7.1)
Requirement already satisfied: websocket-client in /usr/local/lib/python3.10/dist-packages (from jupyter-server&lt;3,&gt;=1.8-&gt;notebook-shim&gt;=0.2.3-&gt;nbclassic&gt;=0.4.7-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.8.0)
Requirement already satisfied: wcwidth in /usr/local/lib/python3.10/dist-packages (from prompt-toolkit!=3.0.0,!=3.0.1,&lt;3.1.0,&gt;=2.0.0-&gt;ipython&gt;=5.0.0-&gt;ipykernel-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.13)
Requirement already satisfied: idna&gt;=2.8 in /usr/local/lib/python3.10/dist-packages (from anyio&lt;4,&gt;=3.1.0-&gt;jupyter-server&lt;3,&gt;=1.8-&gt;notebook-shim&gt;=0.2.3-&gt;nbclassic&gt;=0.4.7-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.7)
Requirement already satisfied: sniffio&gt;=1.1 in /usr/local/lib/python3.10/dist-packages (from anyio&lt;4,&gt;=3.1.0-&gt;jupyter-server&lt;3,&gt;=1.8-&gt;notebook-shim&gt;=0.2.3-&gt;nbclassic&gt;=0.4.7-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.3.1)
Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio&lt;4,&gt;=3.1.0-&gt;jupyter-server&lt;3,&gt;=1.8-&gt;notebook-shim&gt;=0.2.3-&gt;nbclassic&gt;=0.4.7-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.2.1)</code></pre>
</div>
</div>
<div id="86a235dc-8f84-4f6d-b45f-6878d7c3fe98" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import all needed libraries</span></span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zipfile, os, shutil, splitfolders, re, random</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> imutils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> paths</span>
<span id="cb3-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ImageDataGenerator</span>
<span id="cb3-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications.vgg16 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> preprocess_input</span>
<span id="cb3-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> VGG16</span>
<span id="cb3-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dropout</span>
<span id="cb3-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Flatten</span>
<span id="cb3-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dense</span>
<span id="cb3-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Input</span>
<span id="cb3-15"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Model</span>
<span id="cb3-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.optimizers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SGD</span>
<span id="cb3-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.backend <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> clear_session</span>
<span id="cb3-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.callbacks <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EarlyStopping, ReduceLROnPlateau</span>
<span id="cb3-19"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> classification_report</span></code></pre></div>
</div>
<div id="01ea05d4-4ade-4aaa-9a91-da5ddf73bcf0" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># defining directories</span></span>
<span id="cb4-2">local_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/tmp/'</span></span>
<span id="cb4-3">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rockpaperscissors'</span></span>
<span id="cb4-4">local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> local_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dataset_name</span>
<span id="cb4-5">local_zip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.zip'</span></span></code></pre></div>
</div>
<div id="0fb56b07-76d7-43f6-b992-564b25aef5ea" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dowload dataset (pass if exist)</span></span>
<span id="cb5-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>f $local_zip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> wget <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>no<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>check<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>certificate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-3"> https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>github.com<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dicodingacademy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>assets<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>releases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>release<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>rockpaperscissors.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-4"> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>O $local_zip</span></code></pre></div>
</div>
<div id="e18eed1b-b44e-4a6a-819e-551b0c07fb11" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract dataset</span></span>
<span id="cb6-2">zip_ref <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zipfile.ZipFile(local_zip, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb6-3">zip_ref.extractall(local_dir)</span>
<span id="cb6-4">zip_ref.close()</span></code></pre></div>
</div>
<div id="48767388-2b34-4254-9a53-77696233fa65" class="cell" data-outputid="aa7f7997-8665-4f16-e0ef-374bb49c9da1" data-execution_count="11">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prepare train &amp; validation split</span></span>
<span id="cb7-2">shutil.rmtree(local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/rps-cv-images'</span>)</span>
<span id="cb7-3">os.remove(local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/README_rpc-cv-images.txt'</span>)</span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.listdir(local_data))</span>
<span id="cb7-5"></span>
<span id="cb7-6">base_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> local_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/rps'</span></span>
<span id="cb7-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.exists(base_dir) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb7-8">  shutil.rmtree(base_dir)</span>
<span id="cb7-9"></span>
<span id="cb7-10">splitfolders.ratio(local_data, base_dir, ratio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.4</span>))</span>
<span id="cb7-11">train_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'train'</span>)</span>
<span id="cb7-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'amount of training sample : '</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(files) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _, _, files <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.walk(re.escape(base_dir) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'/train'</span>)))</span>
<span id="cb7-13">validation_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val'</span>)</span>
<span id="cb7-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'amount of validation sample : '</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(files) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _, _, files <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.walk(re.escape(base_dir) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'/val'</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['rock', 'scissors', 'paper']
amount of training sample :  1312
amount of validation sample :  876</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Copying files: 2188 files [00:01, 2052.05 files/s]</code></pre>
</div>
</div>
<div id="8mxrq9nczpgC" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prepare test folder for classification report</span></span>
<span id="cb10-2">files_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> root, dirs, files <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.walk(local_data):</span>
<span id="cb10-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dirs:</span>
<span id="cb10-6">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.walk(local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>)</span>
<span id="cb10-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> result <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results:</span>
<span id="cb10-8">      cat_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb10-9">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]:</span>
<span id="cb10-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".jpg"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".jpeg"</span>):</span>
<span id="cb10-11">          cat_list.append(os.path.join(root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>))</span>
<span id="cb10-12">    files_list.append(cat_list)</span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> imgs <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files_list:</span>
<span id="cb10-15">  category <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.findall(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(?&lt;=rs\/).*?(?=\/)'</span>, imgs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb10-16">  filesToCopy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(imgs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb10-17">  destPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> base_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/test/'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(category)</span>
<span id="cb10-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isdir(destPath) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb10-19">    os.makedirs(destPath)</span>
<span id="cb10-20">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> filesToCopy:</span>
<span id="cb10-21">    shutil.copy(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, destPath)</span>
<span id="cb10-22"></span>
<span id="cb10-23">test_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test'</span>)</span></code></pre></div>
</div>
<div id="8e74b6a9-c548-4107-a51f-b8c4601049cb" class="cell" data-outputid="65570b43-282f-4a58-8b39-390952c50907" data-execution_count="13">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># directory summary</span></span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.listdir(train_dir))</span>
<span id="cb11-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.listdir(validation_dir))</span>
<span id="cb11-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.listdir(test_dir))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['rock', 'scissors', 'paper']
['rock', 'scissors', 'paper']
['rock', 'scissors', 'paper']</code></pre>
</div>
</div>
<div id="43b48c7d-850b-4142-8293-77275af8fe0a" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># preparing generator</span></span>
<span id="cb13-2">train_datagen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataGenerator(</span>
<span id="cb13-3">    rescale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>,</span>
<span id="cb13-4">    rotation_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb13-5">    horizontal_flip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb13-6">    shear_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb13-7">    fill_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nearest'</span>,</span>
<span id="cb13-8">    preprocessing_function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_input,</span>
<span id="cb13-9">)</span>
<span id="cb13-10"></span>
<span id="cb13-11">test_datagen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataGenerator(</span>
<span id="cb13-12">    rescale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span></code></pre></div>
</div>
<div id="8692a9b0-db05-4830-bbf2-0e7092e5eea7" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># defining rgb mean for every generator</span></span>
<span id="cb14-2">mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">123.68</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">116.779</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">103.939</span>], dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'float32'</span>)</span>
<span id="cb14-3">train_datagen.mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean</span>
<span id="cb14-4">test_datagen.mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean</span></code></pre></div>
</div>
<div id="bb7112fd-db5b-4458-9daa-c739790c2e03" class="cell" data-outputid="13ea63d1-5b8f-48f3-b35e-e20da77c9046" data-execution_count="16">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flow data to generator</span></span>
<span id="cb15-2">BATCH_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb15-3">train_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_datagen.flow_from_directory(</span>
<span id="cb15-4">    train_dir,</span>
<span id="cb15-5">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>),</span>
<span id="cb15-6">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BATCH_SIZE,</span>
<span id="cb15-7">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical'</span>,</span>
<span id="cb15-8">    shuffle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb15-9">)</span>
<span id="cb15-10"></span>
<span id="cb15-11">validation_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_datagen.flow_from_directory(</span>
<span id="cb15-12">    validation_dir,</span>
<span id="cb15-13">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>),</span>
<span id="cb15-14">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BATCH_SIZE,</span>
<span id="cb15-15">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical'</span>,</span>
<span id="cb15-16">    shuffle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb15-17">)</span>
<span id="cb15-18"></span>
<span id="cb15-19">test_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_datagen.flow_from_directory(</span>
<span id="cb15-20">    test_dir,</span>
<span id="cb15-21">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>),</span>
<span id="cb15-22">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BATCH_SIZE,</span>
<span id="cb15-23">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical'</span>,</span>
<span id="cb15-24">    shuffle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb15-25">)</span>
<span id="cb15-26"></span>
<span id="cb15-27">totalTrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(paths.list_images(train_dir)))</span>
<span id="cb15-28">totalVal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(paths.list_images(validation_dir)))</span>
<span id="cb15-29">totalTest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(paths.list_images(test_dir)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Found 1312 images belonging to 3 classes.
Found 876 images belonging to 3 classes.
Found 12 images belonging to 3 classes.</code></pre>
</div>
</div>
<div id="1b67a8b5-de95-4d93-b155-16b57f680f68" class="cell" data-outputid="3f1f08ca-8c9a-4b6e-8677-a6375385724a" data-execution_count="17">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># preparing baseModel</span></span>
<span id="cb17-2">baseModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> VGG16(weights<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imagenet"</span>, include_top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb17-3">    input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Input(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)))</span>
<span id="cb17-4">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> baseModel.output</span>
<span id="cb17-5">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Flatten(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flatten"</span>)(headModel)</span>
<span id="cb17-6">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>)(headModel)</span>
<span id="cb17-7">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dropout(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)(headModel)</span>
<span id="cb17-8">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"softmax"</span>)(headModel)</span>
<span id="cb17-9">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model(inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>baseModel.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, outputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>headModel)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5
58889256/58889256 [==============================] - 0s 0us/step</code></pre>
</div>
</div>
<div id="b13a33ee-f93b-4bb3-8835-f79dd6eac457" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># freeze hidden layers to preserve model features</span></span>
<span id="cb19-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> layer <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> baseModel.layers:</span>
<span id="cb19-3">    layer.trainable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
</div>
<div id="704b1834-a469-450a-b440-15e4514acb23" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prepare callbacks</span></span>
<span id="cb20-2">EarlyStop <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EarlyStopping(</span>
<span id="cb20-3">    monitor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val_loss'</span>,</span>
<span id="cb20-4">    patience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb20-5">    verbose <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb20-6">    restore_best_weights <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb20-7">    min_delta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb20-8">)</span>
<span id="cb20-9"></span>
<span id="cb20-10">ModelCP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ReduceLROnPlateau(</span>
<span id="cb20-11">    monitor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val_loss'</span>,</span>
<span id="cb20-12">    factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb20-13">    patience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb20-14">    verbose <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb20-15">)</span>
<span id="cb20-16"></span>
<span id="cb20-17">callbacks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [EarlyStop, ModelCP]</span></code></pre></div>
</div>
<div id="525eb595-0d6d-4e92-bfab-cb898d7121f7" class="cell" data-outputid="221171ff-9cc6-4671-daf1-8555fc4e4ee8" data-scrolled="true" data-execution_count="20">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compile the model with frozen layers</span></span>
<span id="cb21-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] compiling model..."</span>)</span>
<span id="cb21-3">opt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SGD(learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-4</span>, momentum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb21-4">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"categorical_crossentropy"</span>, optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>opt,</span>
<span id="cb21-5">    metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accuracy"</span>])</span>
<span id="cb21-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] training head..."</span>)</span>
<span id="cb21-7">H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(</span>
<span id="cb21-8">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_generator,</span>
<span id="cb21-9">    steps_per_epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>totalTrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE,</span>
<span id="cb21-10">    validation_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>validation_generator,</span>
<span id="cb21-11">    validation_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>totalVal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE,</span>
<span id="cb21-12">    epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb21-13">    callbacks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>callbacks,</span>
<span id="cb21-14">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] compiling model...
[INFO] training head...
Epoch 1/25
41/41 [==============================] - 38s 606ms/step - loss: 1.6104 - accuracy: 0.3948 - val_loss: 1.1712 - val_accuracy: 0.3299 - lr: 1.0000e-04
Epoch 2/25
41/41 [==============================] - 24s 587ms/step - loss: 1.1336 - accuracy: 0.4223 - val_loss: 0.9012 - val_accuracy: 0.5764 - lr: 1.0000e-04
Epoch 3/25
41/41 [==============================] - ETA: 0s - loss: 0.9340 - accuracy: 0.5777
Epoch 3: ReduceLROnPlateau reducing learning rate to 4.999999873689376e-05.
41/41 [==============================] - 22s 532ms/step - loss: 0.9340 - accuracy: 0.5777 - val_loss: 1.0275 - val_accuracy: 0.3738 - lr: 1.0000e-04
Epoch 4/25
41/41 [==============================] - 24s 596ms/step - loss: 0.8847 - accuracy: 0.5998 - val_loss: 0.7451 - val_accuracy: 0.7083 - lr: 5.0000e-05
Epoch 5/25
41/41 [==============================] - 22s 541ms/step - loss: 0.7422 - accuracy: 0.7919 - val_loss: 0.6416 - val_accuracy: 0.9375 - lr: 5.0000e-05
Epoch 6/25
41/41 [==============================] - 21s 520ms/step - loss: 0.6953 - accuracy: 0.7698 - val_loss: 0.5985 - val_accuracy: 0.9201 - lr: 5.0000e-05
Epoch 7/25
41/41 [==============================] - ETA: 0s - loss: 0.6743 - accuracy: 0.7790
Epoch 7: ReduceLROnPlateau reducing learning rate to 2.499999936844688e-05.
41/41 [==============================] - 22s 532ms/step - loss: 0.6743 - accuracy: 0.7790 - val_loss: 0.6319 - val_accuracy: 0.8194 - lr: 5.0000e-05
Epoch 8/25
41/41 [==============================] - 23s 565ms/step - loss: 0.7432 - accuracy: 0.7096 - val_loss: 0.5822 - val_accuracy: 0.8646 - lr: 2.5000e-05
Epoch 9/25
41/41 [==============================] - 21s 518ms/step - loss: 0.6423 - accuracy: 0.8056 - val_loss: 0.5275 - val_accuracy: 0.9225 - lr: 2.5000e-05
Epoch 10/25
41/41 [==============================] - 22s 534ms/step - loss: 0.5945 - accuracy: 0.8697 - val_loss: 0.5073 - val_accuracy: 0.9363 - lr: 2.5000e-05
Epoch 11/25
41/41 [==============================] - ETA: 0s - loss: 0.5495 - accuracy: 0.8933
Epoch 11: ReduceLROnPlateau reducing learning rate to 1.249999968422344e-05.
41/41 [==============================] - 24s 589ms/step - loss: 0.5495 - accuracy: 0.8933 - val_loss: 0.5212 - val_accuracy: 0.9271 - lr: 2.5000e-05
Epoch 12/25
41/41 [==============================] - 22s 537ms/step - loss: 0.5244 - accuracy: 0.9002 - val_loss: 0.4796 - val_accuracy: 0.9340 - lr: 1.2500e-05
Epoch 13/25
41/41 [==============================] - ETA: 0s - loss: 0.5346 - accuracy: 0.8941Restoring model weights from the end of the best epoch: 9.

Epoch 13: ReduceLROnPlateau reducing learning rate to 6.24999984211172e-06.
41/41 [==============================] - 21s 522ms/step - loss: 0.5346 - accuracy: 0.8941 - val_loss: 0.4812 - val_accuracy: 0.9213 - lr: 1.2500e-05
Epoch 13: early stopping</code></pre>
</div>
</div>
<div id="58abcb66-6db7-4863-be7b-32d79b91d260" class="cell" data-outputid="8ef30fd4-e0b9-46df-8bd7-4041aa79b8e9" data-execution_count="21">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create classification_report for trained model</span></span>
<span id="cb23-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] evaluating after fine-tuning network head..."</span>)</span>
<span id="cb23-3">test_generator.reset()</span>
<span id="cb23-4">predIdxs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_generator,</span>
<span id="cb23-5">    steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(totalTest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb23-6">predIdxs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(predIdxs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb23-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(classification_report(test_generator.classes, predIdxs,</span>
<span id="cb23-8">    target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_generator.class_indices.keys()))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] evaluating after fine-tuning network head...
1/1 [==============================] - 3s 3s/step
              precision    recall  f1-score   support

       paper       1.00      1.00      1.00         4
        rock       1.00      1.00      1.00         4
    scissors       1.00      1.00      1.00         4

    accuracy                           1.00        12
   macro avg       1.00      1.00      1.00        12
weighted avg       1.00      1.00      1.00        12
</code></pre>
</div>
</div>
<div id="8b059769-a352-49ab-a323-4e7112621269" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># recreate model with unfrozen layers</span></span>
<span id="cb25-2">clear_session()</span>
<span id="cb25-3">train_generator.reset()</span>
<span id="cb25-4">validation_generator.reset()</span>
<span id="cb25-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> layer <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> baseModel.layers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>:]:</span>
<span id="cb25-6">    layer.trainable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</div>
<div id="631e39fe-15a5-41bb-974a-349261508cd2" class="cell" data-outputid="b71fabf2-c549-4732-e86a-63f179d6c814" data-execution_count="23">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># recompile and retrain the model after unfreezing layers</span></span>
<span id="cb26-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] re-compiling model..."</span>)</span>
<span id="cb26-3">opt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SGD(learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-4</span>, momentum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb26-4">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"categorical_crossentropy"</span>, optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>opt,</span>
<span id="cb26-5">    metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accuracy"</span>])</span>
<span id="cb26-6">H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(</span>
<span id="cb26-7">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_generator,</span>
<span id="cb26-8">    steps_per_epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>totalTrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE,</span>
<span id="cb26-9">    validation_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>validation_generator,</span>
<span id="cb26-10">    validation_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>totalVal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE,</span>
<span id="cb26-11">    epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb26-12">    callbacks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>callbacks,</span>
<span id="cb26-13">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] re-compiling model...
Epoch 1/20
41/41 [==============================] - 26s 562ms/step - loss: 0.5498 - accuracy: 0.8255 - val_loss: 0.5427 - val_accuracy: 0.7882 - lr: 1.0000e-04
Epoch 2/20
41/41 [==============================] - 22s 535ms/step - loss: 0.3568 - accuracy: 0.9093 - val_loss: 0.2297 - val_accuracy: 0.9525 - lr: 1.0000e-04
Epoch 3/20
41/41 [==============================] - 21s 514ms/step - loss: 0.2275 - accuracy: 0.9459 - val_loss: 0.1615 - val_accuracy: 0.9618 - lr: 1.0000e-04
Epoch 4/20
41/41 [==============================] - 23s 557ms/step - loss: 0.1356 - accuracy: 0.9688 - val_loss: 0.1183 - val_accuracy: 0.9711 - lr: 1.0000e-04
Epoch 5/20
41/41 [==============================] - 24s 571ms/step - loss: 0.1202 - accuracy: 0.9726 - val_loss: 0.1065 - val_accuracy: 0.9803 - lr: 1.0000e-04
Epoch 6/20
41/41 [==============================] - 24s 576ms/step - loss: 0.1012 - accuracy: 0.9771 - val_loss: 0.0918 - val_accuracy: 0.9838 - lr: 1.0000e-04
Epoch 7/20
41/41 [==============================] - 22s 527ms/step - loss: 0.0926 - accuracy: 0.9787 - val_loss: 0.0674 - val_accuracy: 0.9873 - lr: 1.0000e-04
Epoch 8/20
41/41 [==============================] - ETA: 0s - loss: 0.0648 - accuracy: 0.9870Restoring model weights from the end of the best epoch: 4.
41/41 [==============================] - 23s 557ms/step - loss: 0.0648 - accuracy: 0.9870 - val_loss: 0.0622 - val_accuracy: 0.9873 - lr: 1.0000e-04
Epoch 8: early stopping</code></pre>
</div>
</div>
<div id="dee3368c-489c-444f-ab82-080bac284810" class="cell" data-outputid="317acd8b-2db8-4de1-8a73-4c4d0500363a" data-execution_count="24">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create classification_report for full model</span></span>
<span id="cb28-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] evaluating after fine-tuning network..."</span>)</span>
<span id="cb28-3">test_generator.reset()</span>
<span id="cb28-4">predIdxs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_generator,</span>
<span id="cb28-5">    steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(totalTest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb28-6">predIdxs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(predIdxs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb28-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(classification_report(test_generator.classes, predIdxs,</span>
<span id="cb28-8">    target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_generator.class_indices.keys()))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] evaluating after fine-tuning network...
1/1 [==============================] - 0s 188ms/step
              precision    recall  f1-score   support

       paper       1.00      1.00      1.00         4
        rock       1.00      1.00      1.00         4
    scissors       1.00      1.00      1.00         4

    accuracy                           1.00        12
   macro avg       1.00      1.00      1.00        12
weighted avg       1.00      1.00      1.00        12
</code></pre>
</div>
</div>
<div id="c33b317e-e628-4375-a53b-36591ff64645" class="cell" data-outputid="7a4616ef-314d-48f0-9183-cafad6a7f755" data-execution_count="25">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb30-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb30-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> image</span>
<span id="cb30-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> multilabel_confusion_matrix</span>
<span id="cb30-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb30-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpimg</span>
<span id="cb30-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb30-8"></span>
<span id="cb30-9">testdir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_dir</span>
<span id="cb30-10">uploaded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(paths.list_images(testdir))</span>
<span id="cb30-11">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb30-12">plt.subplots_adjust(left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb30-13">                    bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb30-14">                    right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb30-15">                    top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb30-16">                    wspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>,</span>
<span id="cb30-17">                    hspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>)</span>
<span id="cb30-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(uploaded)):</span>
<span id="cb30-19">    path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uploaded[i]</span>
<span id="cb30-20">    img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.load_img(path, target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>))</span>
<span id="cb30-21"></span>
<span id="cb30-22">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb30-23">    ax.imshow(img)</span>
<span id="cb30-24">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.img_to_array(img)</span>
<span id="cb30-25">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.expand_dims(images, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb30-26">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_input(images)</span>
<span id="cb30-27">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(images)</span>
<span id="cb30-28">    ax.title.set_text(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(train_generator.class_indices.keys())[np.argmax(pred, axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1/1 [==============================] - 1s 1s/step
1/1 [==============================] - 0s 19ms/step
1/1 [==============================] - 0s 19ms/step
1/1 [==============================] - 0s 17ms/step
1/1 [==============================] - 0s 17ms/step
1/1 [==============================] - 0s 17ms/step
1/1 [==============================] - 0s 19ms/step
1/1 [==============================] - 0s 17ms/step
1/1 [==============================] - 0s 18ms/step
1/1 [==============================] - 0s 18ms/step
1/1 [==============================] - 0s 21ms/step
1/1 [==============================] - 0s 17ms/step</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Submission-colab_files/figure-html/cell-21-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <guid>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Submission-colab.html</guid>
  <pubDate>Tue, 02 Jul 2024 09:13:55 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Submission.html</link>
  <description><![CDATA[ 




<p><a target="_blank" href="https://colab.research.google.com/github/sakarimov/Basic-ML-Model/blob/main/JanKenPon%20CNN%20Image%20Recognizer.ipynb"> <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"> </a></p>
<section id="student-name-sulthan-a.-karimov" class="level1">
<h1><strong>Student Name</strong> : Sulthan A. Karimov</h1>
</section>
<section id="username-sulthankarimov" class="level1">
<h1><strong>Username</strong> : sulthankarimov</h1>
</section>
<section id="email-sulthankarimovgmail.com" class="level1">
<h1><strong>Email</strong> : sulthankarimov@gmail.com</h1>
<div id="f35a636c-52b5-4ed9-8036-c3c1c8ce8ad2" class="cell" data-outputid="a5460f6e-0c58-4e1c-da87-8794b71dcaa8" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>pip install split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>folders[full] matplotlib jupyter_http_over_ws imutils</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (3.8.3)
Requirement already satisfied: jupyter_http_over_ws in /usr/local/lib/python3.11/dist-packages (0.0.8)
Requirement already satisfied: imutils in /usr/local/lib/python3.11/dist-packages (0.5.4)
Requirement already satisfied: split-folders[full] in /usr/local/lib/python3.11/dist-packages (0.5.1)
Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from split-folders[full]) (4.66.4)
Requirement already satisfied: contourpy&gt;=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.2.0)
Requirement already satisfied: cycler&gt;=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (0.12.1)
Requirement already satisfied: fonttools&gt;=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (4.49.0)
Requirement already satisfied: kiwisolver&gt;=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.4.5)
Requirement already satisfied: numpy&lt;2,&gt;=1.21 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.26.4)
Requirement already satisfied: packaging&gt;=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (23.2)
Requirement already satisfied: pillow&gt;=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (10.2.0)
Requirement already satisfied: pyparsing&gt;=2.3.1 in /usr/lib/python3/dist-packages (from matplotlib) (2.4.7)
Requirement already satisfied: python-dateutil&gt;=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (2.9.0.post0)
Requirement already satisfied: notebook&gt;=5.0 in /usr/local/lib/python3.11/dist-packages (from jupyter_http_over_ws) (7.1.1)
Requirement already satisfied: six&gt;=1.6.0 in /usr/lib/python3/dist-packages (from jupyter_http_over_ws) (1.16.0)
Requirement already satisfied: tornado&gt;=4.5 in /usr/local/lib/python3.11/dist-packages (from jupyter_http_over_ws) (6.4)
Requirement already satisfied: jupyter-server&lt;3,&gt;=2.4.0 in /usr/local/lib/python3.11/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.13.0)
Requirement already satisfied: jupyterlab-server&lt;3,&gt;=2.22.1 in /usr/local/lib/python3.11/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.25.3)
Requirement already satisfied: jupyterlab&lt;4.2,&gt;=4.1.1 in /usr/local/lib/python3.11/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.1.4)
Requirement already satisfied: notebook-shim&lt;0.3,&gt;=0.2 in /usr/local/lib/python3.11/dist-packages (from notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.4)
Requirement already satisfied: anyio&gt;=3.1.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.3.0)
Requirement already satisfied: argon2-cffi in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (23.1.0)
Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.1.3)
Requirement already satisfied: jupyter-client&gt;=7.4.4 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (8.6.0)
Requirement already satisfied: jupyter-core!=5.0.*,&gt;=4.12 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.7.1)
Requirement already satisfied: jupyter-events&gt;=0.9.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.9.0)
Requirement already satisfied: jupyter-server-terminals in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.5.2)
Requirement already satisfied: nbconvert&gt;=6.4.4 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (7.16.2)
Requirement already satisfied: nbformat&gt;=5.3.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.9.2)
Requirement already satisfied: overrides in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (7.7.0)
Requirement already satisfied: prometheus-client in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.20.0)
Requirement already satisfied: pyzmq&gt;=24 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (25.1.2)
Requirement already satisfied: send2trash&gt;=1.8.2 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.8.2)
Requirement already satisfied: terminado&gt;=0.8.3 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.18.0)
Requirement already satisfied: traitlets&gt;=5.6.0 in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.14.1)
Requirement already satisfied: websocket-client in /usr/local/lib/python3.11/dist-packages (from jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.7.0)
Requirement already satisfied: async-lru&gt;=1.0.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.0.4)
Requirement already satisfied: httpx&gt;=0.25.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.27.0)
Requirement already satisfied: ipykernel in /usr/local/lib/python3.11/dist-packages (from jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (6.29.3)
Requirement already satisfied: jupyter-lsp&gt;=2.0.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.2.4)
Requirement already satisfied: babel&gt;=2.10 in /usr/local/lib/python3.11/dist-packages (from jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.14.0)
Requirement already satisfied: json5&gt;=0.9.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.9.22)
Requirement already satisfied: jsonschema&gt;=4.18.0 in /usr/local/lib/python3.11/dist-packages (from jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.21.1)
Requirement already satisfied: requests&gt;=2.31 in /usr/local/lib/python3.11/dist-packages (from jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.31.0)
Requirement already satisfied: idna&gt;=2.8 in /usr/local/lib/python3.11/dist-packages (from anyio&gt;=3.1.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.6)
Requirement already satisfied: sniffio&gt;=1.1 in /usr/local/lib/python3.11/dist-packages (from anyio&gt;=3.1.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.3.1)
Requirement already satisfied: certifi in /usr/local/lib/python3.11/dist-packages (from httpx&gt;=0.25.0-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2024.2.2)
Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.11/dist-packages (from httpx&gt;=0.25.0-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.0.4)
Requirement already satisfied: h11&lt;0.15,&gt;=0.13 in /usr/local/lib/python3.11/dist-packages (from httpcore==1.*-&gt;httpx&gt;=0.25.0-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.14.0)
Requirement already satisfied: MarkupSafe&gt;=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.1.5)
Requirement already satisfied: attrs&gt;=22.2.0 in /usr/local/lib/python3.11/dist-packages (from jsonschema&gt;=4.18.0-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (23.2.0)
Requirement already satisfied: jsonschema-specifications&gt;=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema&gt;=4.18.0-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2023.12.1)
Requirement already satisfied: referencing&gt;=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema&gt;=4.18.0-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.33.0)
Requirement already satisfied: rpds-py&gt;=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema&gt;=4.18.0-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.18.0)
Requirement already satisfied: platformdirs&gt;=2.5 in /usr/local/lib/python3.11/dist-packages (from jupyter-core!=5.0.*,&gt;=4.12-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.2.0)
Requirement already satisfied: python-json-logger&gt;=2.0.4 in /usr/local/lib/python3.11/dist-packages (from jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.0.7)
Requirement already satisfied: pyyaml&gt;=5.3 in /usr/local/lib/python3.11/dist-packages (from jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (6.0.1)
Requirement already satisfied: rfc3339-validator in /usr/local/lib/python3.11/dist-packages (from jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.1.4)
Requirement already satisfied: rfc3986-validator&gt;=0.1.1 in /usr/local/lib/python3.11/dist-packages (from jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.1.1)
Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.12.3)
Requirement already satisfied: bleach!=5.0.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (6.1.0)
Requirement already satisfied: defusedxml in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.7.1)
Requirement already satisfied: jupyterlab-pygments in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.3.0)
Requirement already satisfied: mistune&lt;4,&gt;=2.0.3 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.0.2)
Requirement already satisfied: nbclient&gt;=0.5.0 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.9.0)
Requirement already satisfied: pandocfilters&gt;=1.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.5.1)
Requirement already satisfied: pygments&gt;=2.4.1 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.17.2)
Requirement already satisfied: tinycss2 in /usr/local/lib/python3.11/dist-packages (from nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.2.1)
Requirement already satisfied: fastjsonschema in /usr/local/lib/python3.11/dist-packages (from nbformat&gt;=5.3.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.19.1)
Requirement already satisfied: charset-normalizer&lt;4,&gt;=2 in /usr/local/lib/python3.11/dist-packages (from requests&gt;=2.31-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.3.2)
Requirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests&gt;=2.31-&gt;jupyterlab-server&lt;3,&gt;=2.22.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.2.1)
Requirement already satisfied: ptyprocess in /usr/local/lib/python3.11/dist-packages (from terminado&gt;=0.8.3-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.7.0)
Requirement already satisfied: argon2-cffi-bindings in /usr/local/lib/python3.11/dist-packages (from argon2-cffi-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (21.2.0)
Requirement already satisfied: comm&gt;=0.1.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.1)
Requirement already satisfied: debugpy&gt;=1.6.5 in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.8.1)
Requirement already satisfied: ipython&gt;=7.23.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (8.22.2)
Requirement already satisfied: matplotlib-inline&gt;=0.1 in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.1.6)
Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.6.0)
Requirement already satisfied: psutil in /usr/local/lib/python3.11/dist-packages (from ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.9.8)
Requirement already satisfied: webencodings in /usr/local/lib/python3.11/dist-packages (from bleach!=5.0.0-&gt;nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.5.1)
Requirement already satisfied: decorator in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (5.1.1)
Requirement already satisfied: jedi&gt;=0.16 in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.19.1)
Requirement already satisfied: prompt-toolkit&lt;3.1.0,&gt;=3.0.41 in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (3.0.43)
Requirement already satisfied: stack-data in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.6.3)
Requirement already satisfied: pexpect&gt;4.3 in /usr/local/lib/python3.11/dist-packages (from ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (4.9.0)
Requirement already satisfied: fqdn in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.5.1)
Requirement already satisfied: isoduration in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (20.11.0)
Requirement already satisfied: jsonpointer&gt;1.13 in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.4)
Requirement already satisfied: uri-template in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.3.0)
Requirement already satisfied: webcolors&gt;=1.11 in /usr/local/lib/python3.11/dist-packages (from jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.13)
Requirement already satisfied: cffi&gt;=1.0.1 in /usr/local/lib/python3.11/dist-packages (from argon2-cffi-bindings-&gt;argon2-cffi-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.16.0)
Requirement already satisfied: soupsieve&gt;1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4-&gt;nbconvert&gt;=6.4.4-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.5)
Requirement already satisfied: pycparser in /usr/local/lib/python3.11/dist-packages (from cffi&gt;=1.0.1-&gt;argon2-cffi-bindings-&gt;argon2-cffi-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.21)
Requirement already satisfied: parso&lt;0.9.0,&gt;=0.8.3 in /usr/local/lib/python3.11/dist-packages (from jedi&gt;=0.16-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.8.3)
Requirement already satisfied: wcwidth in /usr/local/lib/python3.11/dist-packages (from prompt-toolkit&lt;3.1.0,&gt;=3.0.41-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.13)
Requirement already satisfied: arrow&gt;=0.15.0 in /usr/local/lib/python3.11/dist-packages (from isoduration-&gt;jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (1.3.0)
Requirement already satisfied: executing&gt;=1.2.0 in /usr/local/lib/python3.11/dist-packages (from stack-data-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.0.1)
Requirement already satisfied: asttokens&gt;=2.1.0 in /usr/local/lib/python3.11/dist-packages (from stack-data-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.4.1)
Requirement already satisfied: pure-eval in /usr/local/lib/python3.11/dist-packages (from stack-data-&gt;ipython&gt;=7.23.1-&gt;ipykernel-&gt;jupyterlab&lt;4.2,&gt;=4.1.1-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (0.2.2)
Requirement already satisfied: types-python-dateutil&gt;=2.8.10 in /usr/local/lib/python3.11/dist-packages (from arrow&gt;=0.15.0-&gt;isoduration-&gt;jsonschema[format-nongpl]&gt;=4.18.0-&gt;jupyter-events&gt;=0.9.0-&gt;jupyter-server&lt;3,&gt;=2.4.0-&gt;notebook&gt;=5.0-&gt;jupyter_http_over_ws) (2.8.19.20240106)
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv</code></pre>
</div>
</div>
<div id="86a235dc-8f84-4f6d-b45f-6878d7c3fe98" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import all needed libraries</span></span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zipfile, os, shutil, splitfolders, re, random</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> imutils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> paths</span>
<span id="cb3-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ImageDataGenerator</span>
<span id="cb3-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications.vgg16 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> preprocess_input</span>
<span id="cb3-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> VGG16</span>
<span id="cb3-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dropout</span>
<span id="cb3-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Flatten</span>
<span id="cb3-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dense</span>
<span id="cb3-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.layers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Input</span>
<span id="cb3-15"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Model</span>
<span id="cb3-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.optimizers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SGD</span>
<span id="cb3-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.backend <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> clear_session</span>
<span id="cb3-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> classification_report</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>2024-06-13 06:38:22.014324: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.</code></pre>
</div>
</div>
<div id="01ea05d4-4ade-4aaa-9a91-da5ddf73bcf0" class="cell" data-outputid="012a8d6f-b3be-4ae9-8ce0-708eb4610553" data-execution_count="24">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># defining directories</span></span>
<span id="cb5-2">local_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/images/'</span></span>
<span id="cb5-3">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rockpaperscissors'</span></span>
<span id="cb5-4">local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> local_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dataset_name</span>
<span id="cb5-5">local_zip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.zip'</span></span></code></pre></div>
</div>
<div id="0fb56b07-76d7-43f6-b992-564b25aef5ea" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dowload dataset (pass if exist)</span></span>
<span id="cb6-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>f $local_zip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> wget <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>no<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>check<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>certificate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-3"> https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>github.com<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dicodingacademy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>assets<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>releases<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>download<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>release<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>rockpaperscissors.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-4"> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>O $local_zip</span></code></pre></div>
</div>
<div id="e18eed1b-b44e-4a6a-819e-551b0c07fb11" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract dataset</span></span>
<span id="cb7-2">zip_ref <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zipfile.ZipFile(local_zip, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb7-3">zip_ref.extractall(local_dir)</span>
<span id="cb7-4">zip_ref.close()</span></code></pre></div>
</div>
<div id="48767388-2b34-4254-9a53-77696233fa65" class="cell" data-outputid="f4b43c61-ad49-40d0-f374-8a0aef9227a1" data-execution_count="27">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prepare train &amp; validation split</span></span>
<span id="cb8-2">shutil.rmtree(local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/rps-cv-images'</span>)</span>
<span id="cb8-3">os.remove(local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/README_rpc-cv-images.txt'</span>)</span>
<span id="cb8-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.listdir(local_data))</span>
<span id="cb8-5"></span>
<span id="cb8-6">base_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> local_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/rps'</span></span>
<span id="cb8-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.exists(base_dir) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb8-8">  shutil.rmtree(base_dir)</span>
<span id="cb8-9"></span>
<span id="cb8-10">splitfolders.ratio(local_data, base_dir, ratio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.6</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.4</span>))</span>
<span id="cb8-11">train_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'train'</span>)</span>
<span id="cb8-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'amount of training sample : '</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(files) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _, _, files <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.walk(re.escape(base_dir) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'/train'</span>)))</span>
<span id="cb8-13">validation_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val'</span>)</span>
<span id="cb8-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'amount of validation sample : '</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(files) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _, _, files <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.walk(re.escape(base_dir) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'/val'</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['paper', 'rock', 'scissors']
amount of training sample :  1312
amount of validation sample :  876</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Copying files: 2188 files [00:00, 5302.33 files/s]</code></pre>
</div>
</div>
<div id="8mxrq9nczpgC" class="cell" data-execution_count="28">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prepare test folder for classification report</span></span>
<span id="cb11-2">files_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> root, dirs, files <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.walk(local_data):</span>
<span id="cb11-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dirs:</span>
<span id="cb11-6">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.walk(local_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>)</span>
<span id="cb11-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> result <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> results:</span>
<span id="cb11-8">      cat_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb11-9">      <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> result[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]:</span>
<span id="cb11-10">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".jpg"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".jpeg"</span>):</span>
<span id="cb11-11">          cat_list.append(os.path.join(root <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>))</span>
<span id="cb11-12">    files_list.append(cat_list)</span>
<span id="cb11-13"></span>
<span id="cb11-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> imgs <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files_list:</span>
<span id="cb11-15">  category <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.findall(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(?&lt;=rs\/).*?(?=\/)'</span>, imgs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-16">  filesToCopy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(imgs, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb11-17">  destPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> base_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/test/'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(category)</span>
<span id="cb11-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> os.path.isdir(destPath) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>:</span>
<span id="cb11-19">    os.makedirs(destPath)</span>
<span id="cb11-20">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> filesToCopy:</span>
<span id="cb11-21">    shutil.copy(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>, destPath)</span>
<span id="cb11-22"></span>
<span id="cb11-23">test_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test'</span>)</span></code></pre></div>
</div>
<div id="8e74b6a9-c548-4107-a51f-b8c4601049cb" class="cell" data-outputid="38dc2ffb-2279-4180-c247-7e4c80df9ca7" data-execution_count="29">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># directory summary</span></span>
<span id="cb12-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.listdir(train_dir))</span>
<span id="cb12-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.listdir(validation_dir))</span>
<span id="cb12-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(os.listdir(test_dir))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>['paper', 'rock', 'scissors']
['paper', 'rock', 'scissors']
['paper', 'rock', 'scissors']</code></pre>
</div>
</div>
<div id="43b48c7d-850b-4142-8293-77275af8fe0a" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># preparing generator</span></span>
<span id="cb14-2">train_datagen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataGenerator(</span>
<span id="cb14-3">    rescale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>,</span>
<span id="cb14-4">    rotation_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb14-5">    horizontal_flip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb14-6">    shear_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb14-7">    fill_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nearest'</span>,</span>
<span id="cb14-8">    preprocessing_function <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_input,</span>
<span id="cb14-9">)</span>
<span id="cb14-10"></span>
<span id="cb14-11">test_datagen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataGenerator(</span>
<span id="cb14-12">    rescale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span></code></pre></div>
</div>
<div id="8692a9b0-db05-4830-bbf2-0e7092e5eea7" class="cell" data-execution_count="30">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># defining rgb mean for every generator</span></span>
<span id="cb15-2">mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">123.68</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">116.779</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">103.939</span>], dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'float32'</span>)</span>
<span id="cb15-3">train_datagen.mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean</span>
<span id="cb15-4">test_datagen.mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean</span></code></pre></div>
</div>
<div id="bb7112fd-db5b-4458-9daa-c739790c2e03" class="cell" data-outputid="4c22896e-1414-40cd-d95c-eff3045f10b1" data-execution_count="32">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flow data to generator</span></span>
<span id="cb16-2">BATCH_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb16-3">train_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_datagen.flow_from_directory(</span>
<span id="cb16-4">    train_dir,</span>
<span id="cb16-5">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>),</span>
<span id="cb16-6">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BATCH_SIZE,</span>
<span id="cb16-7">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical'</span>,</span>
<span id="cb16-8">    shuffle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb16-9">)</span>
<span id="cb16-10"></span>
<span id="cb16-11">validation_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_datagen.flow_from_directory(</span>
<span id="cb16-12">    validation_dir,</span>
<span id="cb16-13">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>),</span>
<span id="cb16-14">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BATCH_SIZE,</span>
<span id="cb16-15">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical'</span>,</span>
<span id="cb16-16">    shuffle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb16-17">)</span>
<span id="cb16-18"></span>
<span id="cb16-19">test_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_datagen.flow_from_directory(</span>
<span id="cb16-20">    test_dir,</span>
<span id="cb16-21">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>),</span>
<span id="cb16-22">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BATCH_SIZE,</span>
<span id="cb16-23">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'categorical'</span>,</span>
<span id="cb16-24">    shuffle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb16-25">)</span>
<span id="cb16-26"></span>
<span id="cb16-27">totalTrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(paths.list_images(train_dir)))</span>
<span id="cb16-28">totalVal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(paths.list_images(validation_dir)))</span>
<span id="cb16-29">totalTest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(paths.list_images(test_dir)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Found 1312 images belonging to 3 classes.
Found 876 images belonging to 3 classes.
Found 12 images belonging to 3 classes.</code></pre>
</div>
</div>
<div id="1b67a8b5-de95-4d93-b155-16b57f680f68" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># preparing baseModel</span></span>
<span id="cb18-2">baseModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> VGG16(weights<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imagenet"</span>, include_top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb18-3">    input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Input(shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)))</span>
<span id="cb18-4">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> baseModel.output</span>
<span id="cb18-5">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Flatten(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flatten"</span>)(headModel)</span>
<span id="cb18-6">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"relu"</span>)(headModel)</span>
<span id="cb18-7">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dropout(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)(headModel)</span>
<span id="cb18-8">headModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, activation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"softmax"</span>)(headModel)</span>
<span id="cb18-9">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Model(inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>baseModel.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>, outputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>headModel)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>2024-06-13 06:38:33.026430: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-13 06:38:33.036228: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-13 06:38:33.036873: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-13 06:38:33.038422: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-13 06:38:33.039011: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-13 06:38:33.039222: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-13 06:38:33.100423: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-13 06:38:33.100868: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-13 06:38:33.101216: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-13 06:38:33.101481: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1928] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 3503 MB memory:  -&gt; device: 0, name: NVIDIA GeForce GTX 960M, pci bus id: 0000:01:00.0, compute capability: 5.0</code></pre>
</div>
</div>
<div id="b13a33ee-f93b-4bb3-8835-f79dd6eac457" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># freeze hidden layers to preserve model features</span></span>
<span id="cb20-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> layer <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> baseModel.layers:</span>
<span id="cb20-3">    layer.trainable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
</div>
<div id="704b1834-a469-450a-b440-15e4514acb23" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prepare callbacks</span></span>
<span id="cb21-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.callbacks <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> EarlyStopping, ReduceLROnPlateau</span>
<span id="cb21-3"></span>
<span id="cb21-4">EarlyStop <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EarlyStopping(</span>
<span id="cb21-5">    monitor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val_loss'</span>,</span>
<span id="cb21-6">    patience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb21-7">    verbose <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb21-8">    restore_best_weights <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb21-9">    min_delta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb21-10">)</span>
<span id="cb21-11"></span>
<span id="cb21-12">ModelCP <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ReduceLROnPlateau(</span>
<span id="cb21-13">    monitor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val_loss'</span>,</span>
<span id="cb21-14">    factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb21-15">    patience <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb21-16">    verbose <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb21-17">)</span>
<span id="cb21-18"></span>
<span id="cb21-19">callbacks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [EarlyStop, ModelCP]</span></code></pre></div>
</div>
<div id="525eb595-0d6d-4e92-bfab-cb898d7121f7" class="cell" data-outputid="28b28ad5-7f45-41ee-f66d-74d7c9b90289" data-scrolled="true" data-execution_count="15">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># compile the model with frozen layers</span></span>
<span id="cb22-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] compiling model..."</span>)</span>
<span id="cb22-3">opt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SGD(learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-4</span>, momentum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb22-4">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"categorical_crossentropy"</span>, optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>opt,</span>
<span id="cb22-5">    metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accuracy"</span>])</span>
<span id="cb22-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] training head..."</span>)</span>
<span id="cb22-7">H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(</span>
<span id="cb22-8">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_generator,</span>
<span id="cb22-9">    steps_per_epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>totalTrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE,</span>
<span id="cb22-10">    validation_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>validation_generator,</span>
<span id="cb22-11">    validation_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>totalVal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE,</span>
<span id="cb22-12">    epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb22-13">    callbacks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>callbacks,</span>
<span id="cb22-14">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] compiling model...
[INFO] training head...
Epoch 1/25
41/41 ━━━━━━━━━━━━━━━━━━━━ 65s 764ms/step - accuracy: 0.3194 - loss: 1.6568 - val_accuracy: 0.3299 - val_loss: 1.1905 - learning_rate: 1.0000e-04
Epoch 2/25

Epoch 2: ReduceLROnPlateau reducing learning rate to 4.999999873689376e-05.
41/41 ━━━━━━━━━━━━━━━━━━━━ 13s 324ms/step - accuracy: 0.0000e+00 - loss: 0.0000e+00 - val_accuracy: 0.0000e+00 - val_loss: 2.0495 - learning_rate: 1.0000e-04
Epoch 3/25
41/41 ━━━━━━━━━━━━━━━━━━━━ 34s 762ms/step - accuracy: 0.4824 - loss: 1.1331 - val_accuracy: 0.6551 - val_loss: 0.8608 - learning_rate: 5.0000e-05
Epoch 4/25
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 6ms/step - accuracy: 0.0000e+00 - loss: 0.0000e+00 - val_accuracy: 0.8333 - val_loss: 0.7623 - learning_rate: 5.0000e-05
Epoch 5/25
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 471ms/step - accuracy: 0.5609 - loss: 0.9040
Epoch 5: ReduceLROnPlateau reducing learning rate to 2.499999936844688e-05.
41/41 ━━━━━━━━━━━━━━━━━━━━ 35s 789ms/step - accuracy: 0.5616 - loss: 0.9034 - val_accuracy: 0.3414 - val_loss: 0.9531 - learning_rate: 5.0000e-05
Epoch 6/25

Epoch 6: ReduceLROnPlateau reducing learning rate to 1.249999968422344e-05.
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 6ms/step - accuracy: 0.0000e+00 - loss: 0.0000e+00 - val_accuracy: 0.0000e+00 - val_loss: 1.4488 - learning_rate: 2.5000e-05
Epoch 7/25
41/41 ━━━━━━━━━━━━━━━━━━━━ 37s 851ms/step - accuracy: 0.4162 - loss: 1.0887 - val_accuracy: 0.9155 - val_loss: 0.7140 - learning_rate: 1.2500e-05
Epoch 8/25
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 7ms/step - accuracy: 0.0000e+00 - loss: 0.0000e+00 - val_accuracy: 1.0000 - val_loss: 0.6769 - learning_rate: 1.2500e-05
Epoch 9/25
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 553ms/step - accuracy: 0.8038 - loss: 0.7564
Epoch 9: ReduceLROnPlateau reducing learning rate to 6.24999984211172e-06.
41/41 ━━━━━━━━━━━━━━━━━━━━ 39s 879ms/step - accuracy: 0.8039 - loss: 0.7561 - val_accuracy: 0.8727 - val_loss: 0.6917 - learning_rate: 1.2500e-05
Epoch 10/25
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 6ms/step - accuracy: 0.0000e+00 - loss: 0.0000e+00 - val_accuracy: 1.0000 - val_loss: 0.6729 - learning_rate: 6.2500e-06
Epoch 11/25
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 539ms/step - accuracy: 0.7804 - loss: 0.7520
Epoch 11: ReduceLROnPlateau reducing learning rate to 3.12499992105586e-06.
41/41 ━━━━━━━━━━━━━━━━━━━━ 38s 869ms/step - accuracy: 0.7808 - loss: 0.7515 - val_accuracy: 0.8692 - val_loss: 0.6797 - learning_rate: 6.2500e-06
Epoch 11: early stopping
Restoring model weights from the end of the best epoch: 7.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>/usr/local/lib/python3.11/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:122: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1718260718.096354    2416 service.cc:145] XLA service 0x7e2f6c00bac0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
I0000 00:00:1718260718.096393    2416 service.cc:153]   StreamExecutor device (0): NVIDIA GeForce GTX 960M, Compute Capability 5.0
2024-06-13 06:38:38.140178: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:268] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2024-06-13 06:38:38.387163: I external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:465] Loaded cuDNN version 8906
2024-06-13 06:38:42.864229: W external/local_tsl/tsl/framework/bfc_allocator.cc:296] Allocator (GPU_0_bfc) ran out of memory trying to allocate 3.46GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2024-06-13 06:38:42.864269: W external/local_tsl/tsl/framework/bfc_allocator.cc:296] Allocator (GPU_0_bfc) ran out of memory trying to allocate 3.46GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2024-06-13 06:38:43.727778: W external/local_tsl/tsl/framework/bfc_allocator.cc:296] Allocator (GPU_0_bfc) ran out of memory trying to allocate 3.04GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
2024-06-13 06:38:44.727981: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng11{k2=1,k3=0} for conv (f32[32,64,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,64,224,224]{3,2,1,0}, f32[64,64,3,3]{3,2,1,0}, f32[64]{0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01-&gt;bf01, custom_call_target="__cudnn$convBiasActivationForward", backend_config={"operation_queue_id":"0","wait_on_operation_queues":[],"cudnn_conv_backend_config":{"conv_result_scale":1,"activation_mode":"kRelu","side_input_scale":0,"leakyrelu_alpha":0}} is taking a while...
2024-06-13 06:38:45.144180: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.416328597s
Trying algorithm eng11{k2=1,k3=0} for conv (f32[32,64,224,224]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,64,224,224]{3,2,1,0}, f32[64,64,3,3]{3,2,1,0}, f32[64]{0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01-&gt;bf01, custom_call_target="__cudnn$convBiasActivationForward", backend_config={"operation_queue_id":"0","wait_on_operation_queues":[],"cudnn_conv_backend_config":{"conv_result_scale":1,"activation_mode":"kRelu","side_input_scale":0,"leakyrelu_alpha":0}} is taking a while...
2024-06-13 06:38:49.990206: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng36{k2=4,k3=0} for conv (f32[32,128,112,112]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,128,112,112]{3,2,1,0}, f32[128,128,3,3]{3,2,1,0}, f32[128]{0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01-&gt;bf01, custom_call_target="__cudnn$convBiasActivationForward", backend_config={"operation_queue_id":"0","wait_on_operation_queues":[],"cudnn_conv_backend_config":{"conv_result_scale":1,"activation_mode":"kRelu","side_input_scale":0,"leakyrelu_alpha":0}} is taking a while...
2024-06-13 06:38:51.947501: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 2.957386015s
Trying algorithm eng36{k2=4,k3=0} for conv (f32[32,128,112,112]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,128,112,112]{3,2,1,0}, f32[128,128,3,3]{3,2,1,0}, f32[128]{0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01-&gt;bf01, custom_call_target="__cudnn$convBiasActivationForward", backend_config={"operation_queue_id":"0","wait_on_operation_queues":[],"cudnn_conv_backend_config":{"conv_result_scale":1,"activation_mode":"kRelu","side_input_scale":0,"leakyrelu_alpha":0}} is taking a while...
2024-06-13 06:38:52.947650: E external/local_xla/xla/service/slow_operation_alarm.cc:65] Trying algorithm eng36{k2=3,k3=0} for conv (f32[32,128,112,112]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,128,112,112]{3,2,1,0}, f32[128,128,3,3]{3,2,1,0}, f32[128]{0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01-&gt;bf01, custom_call_target="__cudnn$convBiasActivationForward", backend_config={"operation_queue_id":"0","wait_on_operation_queues":[],"cudnn_conv_backend_config":{"conv_result_scale":1,"activation_mode":"kRelu","side_input_scale":0,"leakyrelu_alpha":0}} is taking a while...
2024-06-13 06:38:53.103744: E external/local_xla/xla/service/slow_operation_alarm.cc:133] The operation took 1.156164154s
Trying algorithm eng36{k2=3,k3=0} for conv (f32[32,128,112,112]{3,2,1,0}, u8[0]{0}) custom-call(f32[32,128,112,112]{3,2,1,0}, f32[128,128,3,3]{3,2,1,0}, f32[128]{0}), window={size=3x3 pad=1_1x1_1}, dim_labels=bf01_oi01-&gt;bf01, custom_call_target="__cudnn$convBiasActivationForward", backend_config={"operation_queue_id":"0","wait_on_operation_queues":[],"cudnn_conv_backend_config":{"conv_result_scale":1,"activation_mode":"kRelu","side_input_scale":0,"leakyrelu_alpha":0}} is taking a while...
2024-06-13 06:38:54.454487: W external/local_tsl/tsl/framework/bfc_allocator.cc:296] Allocator (GPU_0_bfc) ran out of memory trying to allocate 2.55GiB with freed_by_count=0. The caller indicates that this is not a failure, but this may mean that there could be performance gains if more memory were available.
I0000 00:00:1718260747.621493    2416 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
2024-06-13 06:39:38.617402: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:39:38.617449: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:39:38.617466: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 1113105719973859051
2024-06-13 06:39:38.617484: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 17891322345123413466
/usr/lib/python3.11/contextlib.py:155: UserWarning: Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches. You may need to use the `.repeat()` function when building your dataset.
  self.gen.throw(typ, value, traceback)
2024-06-13 06:39:51.896922: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:39:51.896973: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:39:51.896987: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 1113105719973859051
2024-06-13 06:39:51.897001: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 17891322345123413466
2024-06-13 06:40:25.878261: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:40:25.878307: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:40:25.878325: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 1113105719973859051
2024-06-13 06:40:25.878349: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 17891322345123413466
2024-06-13 06:40:26.110588: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:40:26.110637: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:40:26.110670: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 1113105719973859051
2024-06-13 06:40:26.110696: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 17891322345123413466
2024-06-13 06:41:01.193988: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:41:01.194027: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:41:01.433249: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:41:01.433288: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:41:01.433300: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 1113105719973859051
2024-06-13 06:41:01.433317: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 17891322345123413466
2024-06-13 06:41:38.865435: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:41:38.865565: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:41:39.121906: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:41:39.121993: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:42:17.951701: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:42:17.951753: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:42:17.951777: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 1113105719973859051
2024-06-13 06:42:17.951811: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 17891322345123413466
2024-06-13 06:42:18.198832: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:42:18.198885: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:42:18.198902: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 1113105719973859051
2024-06-13 06:42:18.198925: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 17891322345123413466</code></pre>
</div>
</div>
<div id="58abcb66-6db7-4863-be7b-32d79b91d260" class="cell" data-outputid="cf8028f7-e241-42cc-9663-95837b6b5f47" data-execution_count="16">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create classification_report for trained model</span></span>
<span id="cb25-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] evaluating after fine-tuning network head..."</span>)</span>
<span id="cb25-3">test_generator.reset()</span>
<span id="cb25-4">predIdxs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_generator,</span>
<span id="cb25-5">    steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(totalTest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-6">predIdxs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(predIdxs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(classification_report(test_generator.classes, predIdxs,</span>
<span id="cb25-8">    target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_generator.class_indices.keys()))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] evaluating after fine-tuning network head...
1/1 ━━━━━━━━━━━━━━━━━━━━ 1s 523ms/step
              precision    recall  f1-score   support

       paper       1.00      1.00      1.00         4
        rock       1.00      0.75      0.86         4
    scissors       0.80      1.00      0.89         4

    accuracy                           0.92        12
   macro avg       0.93      0.92      0.92        12
weighted avg       0.93      0.92      0.92        12
</code></pre>
</div>
</div>
<div id="8b059769-a352-49ab-a323-4e7112621269" class="cell" data-outputid="16e2cbd3-10b9-4679-ca98-bc94d0fd649d" data-execution_count="17">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># recreate model with unfrozen layers</span></span>
<span id="cb27-2">clear_session()</span>
<span id="cb27-3">train_generator.reset()</span>
<span id="cb27-4">validation_generator.reset()</span>
<span id="cb27-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> layer <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> baseModel.layers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>:]:</span>
<span id="cb27-6">    layer.trainable <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
</div>
<div id="631e39fe-15a5-41bb-974a-349261508cd2" class="cell" data-outputid="9c2ab885-86a0-4ab8-992e-e2210942dd31" data-execution_count="21">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># recompile and retrain the model after unfreezing layers</span></span>
<span id="cb28-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] re-compiling model..."</span>)</span>
<span id="cb28-3">opt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SGD(learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-4</span>, momentum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb28-4">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(loss<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"categorical_crossentropy"</span>, optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>opt,</span>
<span id="cb28-5">    metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accuracy"</span>])</span>
<span id="cb28-6">H <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit(</span>
<span id="cb28-7">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_generator,</span>
<span id="cb28-8">    steps_per_epoch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>totalTrain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE,</span>
<span id="cb28-9">    validation_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>validation_generator,</span>
<span id="cb28-10">    validation_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>totalVal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE,</span>
<span id="cb28-11">    epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb28-12">    callbacks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>callbacks,</span>
<span id="cb28-13">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] re-compiling model...
Epoch 1/20
41/41 ━━━━━━━━━━━━━━━━━━━━ 41s 841ms/step - accuracy: 0.8991 - loss: 0.3942 - val_accuracy: 0.8449 - val_loss: 0.3809 - learning_rate: 1.0000e-04
Epoch 2/20
41/41 ━━━━━━━━━━━━━━━━━━━━ 1s 16ms/step - accuracy: 0.0000e+00 - loss: 0.0000e+00 - val_accuracy: 1.0000 - val_loss: 0.1072 - learning_rate: 1.0000e-04
Epoch 3/20
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 540ms/step - accuracy: 0.8902 - loss: 0.3041
Epoch 3: ReduceLROnPlateau reducing learning rate to 4.999999873689376e-05.
41/41 ━━━━━━━━━━━━━━━━━━━━ 39s 861ms/step - accuracy: 0.8907 - loss: 0.3038 - val_accuracy: 0.9537 - val_loss: 0.1826 - learning_rate: 1.0000e-04
Epoch 4/20

Epoch 4: ReduceLROnPlateau reducing learning rate to 2.499999936844688e-05.
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 6ms/step - accuracy: 0.0000e+00 - loss: 0.0000e+00 - val_accuracy: 1.0000 - val_loss: 0.1245 - learning_rate: 5.0000e-05
Epoch 5/20
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 638ms/step - accuracy: 0.9678 - loss: 0.1691
Epoch 5: ReduceLROnPlateau reducing learning rate to 1.249999968422344e-05.
41/41 ━━━━━━━━━━━━━━━━━━━━ 43s 972ms/step - accuracy: 0.9676 - loss: 0.1694 - val_accuracy: 0.9595 - val_loss: 0.1536 - learning_rate: 2.5000e-05
Epoch 6/20

Epoch 6: ReduceLROnPlateau reducing learning rate to 6.24999984211172e-06.
41/41 ━━━━━━━━━━━━━━━━━━━━ 0s 6ms/step - accuracy: 0.0000e+00 - loss: 0.0000e+00 - val_accuracy: 1.0000 - val_loss: 0.1329 - learning_rate: 1.2500e-05
Epoch 6: early stopping
Restoring model weights from the end of the best epoch: 2.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>2024-06-13 06:53:29.167122: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
/usr/lib/python3.11/contextlib.py:155: UserWarning: Your input ran out of data; interrupting training. Make sure that your dataset or generator can generate at least `steps_per_epoch * epochs` batches. You may need to use the `.repeat()` function when building your dataset.
  self.gen.throw(typ, value, traceback)
2024-06-13 06:53:29.167245: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:53:29.745362: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:53:29.745418: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 1113105719973859051
2024-06-13 06:53:29.745443: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:54:08.699110: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:54:08.699156: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:54:08.943815: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:54:08.943913: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_4]]
2024-06-13 06:54:52.113182: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:54:52.113229: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_4]]
2024-06-13 06:54:52.113261: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 17891322345123413466
2024-06-13 06:54:52.364841: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
2024-06-13 06:54:52.364891: W tensorflow/core/framework/local_rendezvous.cc:404] Local rendezvous is aborting with status: OUT_OF_RANGE: End of sequence
     [[{{node IteratorGetNext}}]]
     [[IteratorGetNext/_2]]
2024-06-13 06:54:52.364915: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 1113105719973859051
2024-06-13 06:54:52.364932: I tensorflow/core/framework/local_rendezvous.cc:422] Local rendezvous recv item cancelled. Key hash: 17891322345123413466</code></pre>
</div>
</div>
<div id="dee3368c-489c-444f-ab82-080bac284810" class="cell" data-outputid="f4bbc3c0-54b2-4a21-abc7-99bdd0489613" data-execution_count="22">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create classification_report for full model</span></span>
<span id="cb31-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] evaluating after fine-tuning network..."</span>)</span>
<span id="cb31-3">test_generator.reset()</span>
<span id="cb31-4">predIdxs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_generator,</span>
<span id="cb31-5">    steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(totalTest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> BATCH_SIZE) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb31-6">predIdxs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(predIdxs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb31-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(classification_report(test_generator.classes, predIdxs,</span>
<span id="cb31-8">    target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_generator.class_indices.keys()))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] evaluating after fine-tuning network...
1/1 ━━━━━━━━━━━━━━━━━━━━ 1s 512ms/step
              precision    recall  f1-score   support

       paper       1.00      1.00      1.00         4
        rock       1.00      1.00      1.00         4
    scissors       1.00      1.00      1.00         4

    accuracy                           1.00        12
   macro avg       1.00      1.00      1.00        12
weighted avg       1.00      1.00      1.00        12
</code></pre>
</div>
</div>
<div id="c33b317e-e628-4375-a53b-36591ff64645" class="cell" data-outputid="cf7dcb53-52da-416d-ff55-b29ccae06aea" data-execution_count="33">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb33-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb33-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> image</span>
<span id="cb33-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> multilabel_confusion_matrix</span>
<span id="cb33-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb33-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpimg</span>
<span id="cb33-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb33-8"></span>
<span id="cb33-9">testdir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_dir</span>
<span id="cb33-10">uploaded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(paths.list_images(testdir))</span>
<span id="cb33-11">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb33-12">plt.subplots_adjust(left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb33-13">                    bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb33-14">                    right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb33-15">                    top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb33-16">                    wspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>,</span>
<span id="cb33-17">                    hspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>)</span>
<span id="cb33-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(uploaded)):</span>
<span id="cb33-19">    path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uploaded[i]</span>
<span id="cb33-20">    img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.load_img(path, target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>))</span>
<span id="cb33-21"></span>
<span id="cb33-22">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb33-23">    ax.imshow(img)</span>
<span id="cb33-24">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.img_to_array(img)</span>
<span id="cb33-25">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.expand_dims(images, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb33-26">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_input(images)</span>
<span id="cb33-27">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(images)</span>
<span id="cb33-28">    ax.title.set_text(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(train_generator.class_indices.keys())[np.argmax(pred, axis <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 23ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 19ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 22ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 23ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 19ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 23ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 23ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 19ms/step
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 19ms/step</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Submission_files/figure-html/cell-21-output-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <guid>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Submission.html</guid>
  <pubDate>Tue, 02 Jul 2024 09:13:55 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Transfer Learning.html</link>
  <description><![CDATA[ 




<div id="ee7661be-242b-4c62-a973-0ec9a148767e" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import the necessary packages</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize the path to the *original* input directory of images</span></span>
<span id="cb1-4">ORIG_INPUT_DATASET <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Food-5K"</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize the base path to the *new* directory that will contain</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># our images after computing the training and testing split</span></span>
<span id="cb1-7">BASE_PATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"datasets/images/rps"</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define the names of the training, testing, and validation</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># directories</span></span>
<span id="cb1-10">TRAIN <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"train"</span></span>
<span id="cb1-11">TEST <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"val"</span></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize the list of class label names</span></span>
<span id="cb1-13">CLASSES <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rock"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"paper"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"scissors"</span>]</span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the batch size</span></span>
<span id="cb1-15">BATCH_SIZE <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize the label encoder file path and the output directory to</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># where the extracted features (in CSV file format) will be stored</span></span>
<span id="cb1-18">LE_PATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.sep.join([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rpsoutput"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"le.cpickle"</span>])</span>
<span id="cb1-19">BASE_CSV_PATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rpsoutput"</span></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set the path to the serialized model after training</span></span>
<span id="cb1-21">MODEL_PATH <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.sep.join([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rpsoutput"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model.cpickle"</span>])</span></code></pre></div>
</div>
<section id="import-the-necessary-packages" class="level1">
<h1>import the necessary packages</h1>
<p>from pyimagesearch import config from imutils import paths import shutil import os # loop over the data splits for split in (config.TRAIN, config.TEST, config.VAL): # grab all image paths in the current split print(“[INFO] processing ‘{} split’…”.format(split)) p = os.path.sep.join([config.ORIG_INPUT_DATASET, split]) imagePaths = list(paths.list_images(p)) # loop over the image paths for imagePath in imagePaths: # extract class label from the filename filename = imagePath.split(os.path.sep)[-1] label = config.CLASSES[int(filename.split(“_“)[0])] # construct the path to the output directory dirPath = os.path.sep.join([config.BASE_PATH, split, label]) # if the output directory does not exist, create it if not os.path.exists(dirPath): os.makedirs(dirPath) # construct the path to the output image file and copy it p = os.path.sep.join([dirPath, filename]) shutil.copy2(imagePath, p)</p>
<div id="81028874-5a2b-4854-a70d-45d4e96d3c56" class="cell" data-scrolled="true" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import the necessary packages</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LabelEncoder</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> VGG16</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications.vgg16 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> preprocess_input</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> img_to_array</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_img</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> imutils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> paths</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pickle</span>
<span id="cb2-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb2-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the VGG16 network and initialize the label encoder</span></span>
<span id="cb2-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] loading network..."</span>)</span>
<span id="cb2-14">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> VGG16(weights<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imagenet"</span>, include_top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb2-15">le <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop over the data splits</span></span>
<span id="cb2-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> split <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> (TRAIN, TEST):</span>
<span id="cb2-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grab all image paths in the current split</span></span>
<span id="cb2-19">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] processing '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> split'..."</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(split))</span>
<span id="cb2-20">    p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.sep.join([BASE_PATH, split])</span>
<span id="cb2-21">    imagePaths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(paths.list_images(p))</span>
<span id="cb2-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># randomly shuffle the image paths and then extract the class</span></span>
<span id="cb2-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># labels from the file paths</span></span>
<span id="cb2-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#random.shuffle(imagePaths)</span></span>
<span id="cb2-25">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [p.split(os.path.sep)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> imagePaths]</span>
<span id="cb2-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if the label encoder is None, create it</span></span>
<span id="cb2-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> le <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb2-28">        le <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LabelEncoder()</span>
<span id="cb2-29">        le.fit(labels)</span>
<span id="cb2-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># open the output CSV file for writing</span></span>
<span id="cb2-31">    csvPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.sep.join([BASE_CSV_PATH,</span>
<span id="cb2-32">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.csv"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(split)])</span>
<span id="cb2-33">    csv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(csvPath, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>)</span>
<span id="cb2-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop over the images in batches</span></span>
<span id="cb2-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (b, i) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(imagePaths), BATCH_SIZE)):</span>
<span id="cb2-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract the batch of images and labels, then initialize the</span></span>
<span id="cb2-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># list of actual images that will be passed through the network</span></span>
<span id="cb2-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for feature extraction</span></span>
<span id="cb2-39">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] processing batch </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb2-40">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(np.ceil(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(imagePaths) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(BATCH_SIZE)))))</span>
<span id="cb2-41">        batchPaths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> imagePaths[i:i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> BATCH_SIZE]</span>
<span id="cb2-42">        batchLabels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> le.transform(labels[i:i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> BATCH_SIZE])</span>
<span id="cb2-43">        batchImages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb2-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop over the images and labels in the current batch</span></span>
<span id="cb2-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> imagePath <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> batchPaths:</span>
<span id="cb2-46">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the input image using the Keras helper utility</span></span>
<span id="cb2-47">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># while ensuring the image is resized to 224x224 pixels</span></span>
<span id="cb2-48">            image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_img(imagePath, target_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>))</span>
<span id="cb2-49">            image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_to_array(image)</span>
<span id="cb2-50">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># preprocess the image by (1) expanding the dimensions and</span></span>
<span id="cb2-51">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (2) subtracting the mean RGB pixel intensity from the</span></span>
<span id="cb2-52">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ImageNet dataset</span></span>
<span id="cb2-53">            image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.expand_dims(image, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-54">            image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_input(image)</span>
<span id="cb2-55">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add the image to the batch</span></span>
<span id="cb2-56">            batchImages.append(image)</span>
<span id="cb2-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pass the images through the network and use the outputs as</span></span>
<span id="cb2-58">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># our actual features, then reshape the features into a</span></span>
<span id="cb2-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># flattened volume</span></span>
<span id="cb2-60">        batchImages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.vstack(batchImages)</span>
<span id="cb2-61">        features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(batchImages, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>BATCH_SIZE)</span>
<span id="cb2-62">        features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> features.reshape((features.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>))</span>
<span id="cb2-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop over the class labels and extracted features</span></span>
<span id="cb2-64">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (label, vec) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(batchLabels, features):</span>
<span id="cb2-65">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># construct a row that exists of the class label and</span></span>
<span id="cb2-66">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extracted features</span></span>
<span id="cb2-67">            vec <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>.join([<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(v) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> v <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> vec])</span>
<span id="cb2-68">            csv.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(label, vec))</span>
<span id="cb2-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># close the CSV file csv.close() # serialize the label encoder to disk f = open(LE_PATH, "wb")</span></span>
<span id="cb2-70">f.write(pickle.dumps(le))</span>
<span id="cb2-71">f.close()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>2024-06-12 13:09:00.027397: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-06-12 13:09:01.839505: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-12 13:09:01.847179: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-12 13:09:01.847420: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-12 13:09:01.848740: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-12 13:09:01.848957: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-12 13:09:01.849144: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-12 13:09:01.893914: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-12 13:09:01.894166: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-12 13:09:01.894367: I external/local_xla/xla/stream_executor/cuda/cuda_executor.cc:998] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-06-12 13:09:01.894523: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1928] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 3503 MB memory:  -&gt; device: 0, name: NVIDIA GeForce GTX 960M, pci bus id: 0000:01:00.0, compute capability: 5.0
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1718197742.641173      90 service.cc:145] XLA service 0x7871e8004be0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
I0000 00:00:1718197742.641208      90 service.cc:153]   StreamExecutor device (0): NVIDIA GeForce GTX 960M, Compute Capability 5.0
2024-06-12 13:09:02.653166: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:268] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2024-06-12 13:09:02.746601: I external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:465] Loaded cuDNN version 8906
I0000 00:00:1718197749.379902      90 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[INFO] loading network...
[INFO] processing 'train split'...
[INFO] processing batch 1/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 7s 7s/step
[INFO] processing batch 2/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 25ms/step
[INFO] processing batch 3/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step
[INFO] processing batch 4/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 20ms/step
[INFO] processing batch 5/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 24ms/step
[INFO] processing batch 6/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 19ms/step
[INFO] processing batch 7/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 22ms/step
[INFO] processing batch 8/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 20ms/step
[INFO] processing batch 9/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step
[INFO] processing batch 10/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 20ms/step
[INFO] processing batch 11/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 28ms/step
[INFO] processing batch 12/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 27ms/step
[INFO] processing batch 13/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 29ms/step
[INFO] processing batch 14/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 23ms/step
[INFO] processing batch 15/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 37ms/step
[INFO] processing batch 16/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 22ms/step
[INFO] processing batch 17/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 22ms/step
[INFO] processing batch 18/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 18ms/step
[INFO] processing batch 19/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 27ms/step
[INFO] processing batch 20/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 20ms/step
[INFO] processing batch 21/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 18ms/step
[INFO] processing batch 22/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 24ms/step
[INFO] processing batch 23/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 18ms/step
[INFO] processing batch 24/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 24ms/step
[INFO] processing batch 25/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 22ms/step
[INFO] processing batch 26/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 26ms/step
[INFO] processing batch 27/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 21ms/step
[INFO] processing batch 28/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 18ms/step
[INFO] processing batch 29/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 20ms/step
[INFO] processing batch 30/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 28ms/step
[INFO] processing batch 31/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 27ms/step
[INFO] processing batch 32/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 19ms/step
[INFO] processing batch 33/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 23ms/step
[INFO] processing batch 34/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 25ms/step
[INFO] processing batch 35/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 20ms/step
[INFO] processing batch 36/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 20ms/step
[INFO] processing batch 37/328
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 20ms/step
[INFO] processing batch 38/328</code></pre>
</div>
<div class="cell-output cell-output-error">
<pre><code>KeyboardInterrupt: </code></pre>
</div>
</div>
<div id="208fb465-6b4f-494b-a371-b7bd0a8f2edd" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># import the necessary packages</span></span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.linear_model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> LogisticRegression</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> classification_report</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb6-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pickle</span>
<span id="cb6-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> load_data_split(splitPath):</span>
<span id="cb6-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># initialize the data and labels</span></span>
<span id="cb6-9">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-10">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb6-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># loop over the rows in the data split file</span></span>
<span id="cb6-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> row <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(splitPath):</span>
<span id="cb6-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extract the class label and features from the row</span></span>
<span id="cb6-14">        row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row.strip().split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>)</span>
<span id="cb6-15">        label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-16">        features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(row[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"float"</span>)</span>
<span id="cb6-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># update the data and label lists</span></span>
<span id="cb6-18">        data.append(features)</span>
<span id="cb6-19">        labels.append(label)</span>
<span id="cb6-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert the data and labels to NumPy arrays</span></span>
<span id="cb6-21">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(data)</span>
<span id="cb6-22">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(labels)</span>
<span id="cb6-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># return a tuple of the data and labels</span></span>
<span id="cb6-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> (data, labels)</span>
<span id="cb6-25"></span>
<span id="cb6-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># derive the paths to the training and testing CSV files</span></span>
<span id="cb6-27">trainingPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.sep.join([BASE_CSV_PATH,</span>
<span id="cb6-28">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.csv"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(TRAIN)])</span>
<span id="cb6-29">testingPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.sep.join([BASE_CSV_PATH,</span>
<span id="cb6-30">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.csv"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(TEST)])</span>
<span id="cb6-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the data from disk</span></span>
<span id="cb6-32"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] loading data..."</span>)</span>
<span id="cb6-33">(trainX, trainY) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_data_split(trainingPath)</span>
<span id="cb6-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(trainX.shape)</span>
<span id="cb6-35">(testX, testY) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_data_split(testingPath)</span>
<span id="cb6-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the label encoder from disk</span></span>
<span id="cb6-37">le <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pickle.loads(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(LE_PATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rb"</span>).read())</span>
<span id="cb6-38"></span>
<span id="cb6-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># train the model</span></span>
<span id="cb6-40"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] training model..."</span>)</span>
<span id="cb6-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(testX)</span>
<span id="cb6-42">modelLogReg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LogisticRegression(solver<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lbfgs"</span>, multi_class<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auto"</span>,</span>
<span id="cb6-43">    max_iter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb6-44">modelLogReg.fit(trainX, trainY)</span>
<span id="cb6-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># evaluate the model</span></span>
<span id="cb6-46"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] evaluating..."</span>)</span>
<span id="cb6-47">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelLogReg.predict(testX)</span>
<span id="cb6-48"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(classification_report(testY, preds, target_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>le.classes_))</span>
<span id="cb6-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># serialize the model to disk</span></span>
<span id="cb6-50"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[INFO] saving model..."</span>)</span>
<span id="cb6-51">f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(MODEL_PATH, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>)</span>
<span id="cb6-52">f.write(pickle.dumps(modelLogReg))</span>
<span id="cb6-53">f.close()</span></code></pre></div>
</div>
<div id="6643fb4b-2de2-458f-83c3-837145b07772" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#from google.colab import files</span></span>
<span id="cb7-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> image</span>
<span id="cb7-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> multilabel_confusion_matrix</span>
<span id="cb7-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb7-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpimg</span>
<span id="cb7-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>matplotlib inline</span>
<span id="cb7-9"></span>
<span id="cb7-10">testdir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/images/rps/test/'</span></span>
<span id="cb7-11">uploaded <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.listdir(testdir)</span>
<span id="cb7-12">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#fig.tight_layout(pad=5.0)</span></span>
<span id="cb7-14">plt.subplots_adjust(left<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb7-15">                    bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, </span>
<span id="cb7-16">                    right<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, </span>
<span id="cb7-17">                    top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, </span>
<span id="cb7-18">                    wspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, </span>
<span id="cb7-19">                    hspace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>)</span>
<span id="cb7-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(uploaded)):</span>
<span id="cb7-21">    path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> testdir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> uploaded[i]</span>
<span id="cb7-22">    img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.load_img(path, target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>))</span>
<span id="cb7-23"></span>
<span id="cb7-24">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-25">    ax.imshow(img)</span>
<span id="cb7-26">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_to_array(img)</span>
<span id="cb7-27">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.expand_dims(images, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-28">    images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preprocess_input(images)</span>
<span id="cb7-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#images = np.vstack([x])</span></span>
<span id="cb7-30">    features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.predict(images, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>BATCH_SIZE)</span>
<span id="cb7-31">    features <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> features.reshape((features.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>))</span>
<span id="cb7-32">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelLogReg.predict(features)</span>
<span id="cb7-33">    ax.title.set_text(le.classes_[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pred[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])])</span></code></pre></div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <guid>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/Transfer Learning.html</guid>
  <pubDate>Tue, 02 Jul 2024 09:13:55 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/CNN.html</link>
  <description><![CDATA[ 




<section id="section" class="level1">
<h1></h1>
<p><a target="_blank" href="https://colab.research.google.com/github/sakarimov/Basic-ML-Model/blob/main/CNN.ipynb"> <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"> </a></p>
<div id="4611428c" class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TF_CPP_MIN_LOG_LEVEL'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span> </span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorflow <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tf</span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(tf.__version__)</span></code></pre></div>
</div>
<div id="0cafc29f" class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb2-2">  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> google.colab</span>
<span id="cb2-3">  IN_COLAB <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb2-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb2-5">  IN_COLAB <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">IN_COLAB</span></code></pre></div>
</div>
<div id="6fa7734f" class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> zipfile, os</span>
<span id="cb3-2"></span>
<span id="cb3-3">local_zip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb3-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/images/archive.zip'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> IN_COLAB <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb3-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/content/drive/MyDrive/datasets/images/archive.zip'</span></span>
<span id="cb3-6">)</span>
<span id="cb3-7">zip_ref <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> zipfile.ZipFile(local_zip, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>)</span>
<span id="cb3-8">zip_ref.extractall(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/images/messy_clean_room/'</span>)</span>
<span id="cb3-9">zip_ref.close()</span>
<span id="cb3-10"></span>
<span id="cb3-11">base_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datasets/images/messy_clean_room/images'</span></span>
<span id="cb3-12">train_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'train'</span>)</span>
<span id="cb3-13">validation_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(base_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val'</span>)</span></code></pre></div>
</div>
<div id="e52ed379" class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">os.listdir(base_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/train'</span>)</span></code></pre></div>
</div>
<div id="c67eb684" class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">os.listdir(base_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/val'</span>)</span></code></pre></div>
</div>
<div id="4dff6a35" class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.preprocessing.image <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ImageDataGenerator</span>
<span id="cb6-2"></span>
<span id="cb6-3">train_datagen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataGenerator(</span>
<span id="cb6-4">    rescale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>,</span>
<span id="cb6-5">    rotation_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,</span>
<span id="cb6-6">    horizontal_flip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb6-7">    shear_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb6-8">    fill_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nearest'</span>)</span>
<span id="cb6-9"></span>
<span id="cb6-10">test_datagen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataGenerator(</span>
<span id="cb6-11">    rescale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span></code></pre></div>
</div>
<div id="9ded8641" class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">train_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_datagen.flow_from_directory(</span>
<span id="cb7-2">    train_dir,</span>
<span id="cb7-3">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>),</span>
<span id="cb7-4">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb7-5">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binary'</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7">validation_generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_datagen.flow_from_directory(</span>
<span id="cb7-8">    validation_dir,</span>
<span id="cb7-9">    target_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>),</span>
<span id="cb7-10">    batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb7-11">    class_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binary'</span>)</span></code></pre></div>
</div>
<div id="32632618" class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>(train_generator)</span></code></pre></div>
</div>
<div id="020fab4a" class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.models.Sequential([</span>
<span id="cb9-2">    tf.keras.Input(shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb9-3">    tf.keras.layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb9-4">    tf.keras.layers.MaxPooling2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb9-5">    tf.keras.layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb9-6">    tf.keras.layers.MaxPooling2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb9-7">    tf.keras.layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb9-8">    tf.keras.layers.MaxPooling2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb9-9">    tf.keras.layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb9-10">    tf.keras.layers.MaxPooling2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb9-11">    tf.keras.layers.Flatten(),</span>
<span id="cb9-12">    tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb9-13">    tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sigmoid'</span>)</span>
<span id="cb9-14">])</span></code></pre></div>
</div>
<div id="0d998e4c" class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.models.Sequential()</span>
<span id="cb10-2">model.add(tf.keras.Input(shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))),</span>
<span id="cb10-3">model.add(tf.keras.layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>))</span>
<span id="cb10-4">model.add(tf.keras.layers.MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb10-5">model.add(tf.keras.layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>))</span>
<span id="cb10-6">model.add(tf.keras.layers.MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb10-7">model.add(tf.keras.layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>))</span>
<span id="cb10-8">model.add(tf.keras.layers.MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb10-9">model.add(tf.keras.layers.Conv2D(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>))</span>
<span id="cb10-10">model.add(tf.keras.layers.MaxPooling2D((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span>
<span id="cb10-11">model.add(tf.keras.layers.Flatten())</span>
<span id="cb10-12">model.add(tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>))</span>
<span id="cb10-13">model.add(tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sigmoid'</span>))</span></code></pre></div>
</div>
<div id="c5587b11" class="cell" data-scrolled="true">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">model.summary()</span></code></pre></div>
</div>
<div id="8a00c38d" class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binary_crossentropy'</span>,</span>
<span id="cb12-2">              optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.optimizers.Adam(),</span>
<span id="cb12-3">              metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>])</span></code></pre></div>
</div>
<p>model.fit( train_generator, epochs = 40, validation_data = validation_generator, validation_steps = 5, verbose = 2)</p>
<div id="8de0c0f0" class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ResNet50</span>
<span id="cb13-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflow.keras.applications <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ResNet152V2</span>
<span id="cb13-3">transfer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.models.Sequential([</span>
<span id="cb13-4">    ResNet152V2(</span>
<span id="cb13-5">        weights <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"imagenet"</span>, </span>
<span id="cb13-6">        include_top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, </span>
<span id="cb13-7">        input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.keras.layers.Input(shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))),</span>
<span id="cb13-8">    tf.keras.layers.Flatten(),</span>
<span id="cb13-9">    tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'relu'</span>),</span>
<span id="cb13-10">    tf.keras.layers.Dense(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, activation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'softmax'</span>)</span>
<span id="cb13-11">])</span></code></pre></div>
</div>
<div id="646724ab" class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">transfer.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(loss <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'binary_crossentropy'</span>,</span>
<span id="cb14-2">              optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf.optimizers.Adam(),</span>
<span id="cb14-3">              metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>])</span></code></pre></div>
</div>
<div id="a36cb469" class="cell" data-scrolled="true">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">transfer.fit(</span>
<span id="cb15-2">    train_generator,</span>
<span id="cb15-3">    epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>,</span>
<span id="cb15-4">    validation_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> validation_generator,</span>
<span id="cb15-5">    validation_steps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb15-6">    verbose <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <guid>https://sulthankarimov.my.id/posts/Data Science/Machine Learning/CNN.html</guid>
  <pubDate>Tue, 02 Jul 2024 09:13:55 GMT</pubDate>
</item>
</channel>
</rss>
